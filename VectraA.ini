[aliases]
n0=msg {
n1=  if ($chr(35) !isin $1) { .msg $1 $2- }
n2=  elseif (c isincs $chan($1).mode) { .msg $1 $strip($2-) }
n3=  else { .msg $1 $2- }
n4=}
n5=describe {
n6=  if ($chr(35) !isin $1) { .describe $1 $2- }
n7=  elseif (E isincs $chan($1).mode) { .msg $1 6* $2- }
n8=  else { .describe $1 $2- }
n9=}
n10=_PrimaryBot { .return $iif($me == $scon(1).me,$true,$false) }
n11=c1 { 
n12=  .return $strip($1-)
n13=} 
n14=c2 {
n15=  if ($istok(BitlBee,$network,32) && $readini(mycolor.ini,2,$address($1,3))) { .return $+($chr(3),$readini(mycolor.ini,2,$address($1,3)),$2-,$chr(3)) }
n16=  elseif ($istok(BitlBee,$network,32)) { .return $strip($2-) }
n17=  elseif ($readini(mycolor.ini,2,$address($1,3))) { .return $+($chr(3),$v1,$2-,$chr(3)) }
n18=  else { .return $+($chr(3),10,$2-,$chr(3)) }
n19=}
n20=c3 {
n21=  if ($istok(BitlBee,$network,32)) { .return $strip($1-) }
n22=  else { .return $+($chr(3),$strip($1-)) }
n23=}
n24=c4 { 
n25=  if ($istok(BitlBee,$network,32)) { .return $strip($1-) }
n26=  else { .return $+($chr(3),10,$1-,$chr(3)) }
n27=}
n28=c5 {
n29=  if ($istok(BitlBee,$network,32) && $readini(mycolor.ini,2,$address($1,3))) { .return $+($chr(3),$readini(mycolor.ini,2,$address($1,3)),$2-,$chr(3)) }
n30=  elseif ($istok(BitlBee,$network,32)) { .return $strip($2-) }
n31=  elseif ($readini(mycolor.ini,2,$address($1,3))) { .return $+($chr(3),$v1) }
n32=  else { .return $+($chr(3),10,$2-,$chr(3)) }
n33=}
n34=cg { .return $+($chr(3),03,+,$remove($1-,+),$chr(3)) }
n35=cl { .return $+($chr(3),05,-,$remove($strip($1),-),$chr(3)) }
n36=logo { .return $c1(**) $+($c1($chr(40)),$c2($1,$upper($2-)),$c1,$chr(41),:) }
n37=rsnError { .return $c1(Username has to contain $+(Spaces,$chr(44)) $+(underscores,$chr(44)) $+(numbers,$chr(44)) letters and 12 characters max.) }
n38=base_chans .return $mid($regsubex($str(~,$comchan($me,0)),/(.)/g,$iif(!$istok(#Vectra #DevVectra,$comchan($me,\n),32),$+($chr(44),$comchan($me,\n)))),2)
n39=msgs {
n40=  if ($network == bitlbee) { .return $iif($query($1), .msg $left($1,400), .msg $left($2,400)) }
n41=  else { return $iif($query($1), .msg $1, $iif($Settings($2).Public, .notice $1, $iif($left($3,1) == @ && !$Settings($2).Public, $iif(*c* iswmcs $gettok($chan($chan).mode,1,32),.notice $1,.msg $2), .notice $1))) }
n42=}
n43=paramFind {
n44=  if (!$istok(-d -a,$1,32) && $2) && ($read($+(",$mircdir,Skill Data\,$1,.txt,"), w,$+(*,$regsubex($2-,/([^\w])/g,*),*))) return $+($1,|,$2,|,$read($+($mircdir,Skill Data\,$1,.txt), w,$+(*, $regsubex($2-,/([^\w])/g,*) ,*)))
n45=  elseif ($istok(-d,$1,32) && $3) { $iif($me ison #DevVectra,.msg $v2 paramFind -d $2 $3-) | write -d $+(",$mircdir,Skill Data\,$2,.txt") $3- }
n46=  elseif ($istok(-a,$1,32) && $3) { $iif($me ison #DevVectra,.msg $v2 paramFind -a $2 $3-) | write $+(",$mircdir,Skill Data\,$2,.txt") $3- }
n47=} 
n48=;;/sockshorten <amountPR> <msg/notice> <nick/#channel> <logo> <LineOfText>
n49=sockshorten { 
n50=  .var %logo = $4-5
n51=  tokenize 32 $1-3 $6-
n52=  var %c $ticks, %count = 1, %tokens = $ceil($calc($numtok($4-,32) / $1)), %rawTEXT = : $+ $address($me,5) privmsg $2 :
n53=  while (%count <= %tokens) {
n54=    if ($ticks > $calc(%c + 2000)) { break }
n55=    var %TextToSend = %TextToSend $gettok($4-,1- $+ $1,32), %calcValue = $calc($len(%TextToSend) + $len(%rawTEXT) + $len(%logo))
n56=    if (%calcValue >= 500) {
n57=      var %getTok = $len($gettok($4-,1- $+ $1,32)))
n58=      $2 $3 %logo $remove($gettok($left(%TextToSend,- $+ $calc(2+%getTok)),1,32),$chr(124)) $gettok($left(%TextToSend,- $+ $calc(2+%getTok)),2-,32)
n59=      %TextToSend = $right(%TextToSend,%getTok)
n60=    }
n61=    if (%count >= %tokens) { 
n62=      $2 $3 %logo $remove($gettok($left(%TextToSend,-1),1,32),$chr(124)) $gettok($left(%TextToSend,-1),2-,32)
n63=    }
n64=    .tokenize 32 $1-3 $gettok($4-, [ $calc($1 + 1) $+ - ] ,32)
n65=    .inc %count
n66=  }
n67=}
n68=msnhub {
n69=  var %x = 1
n70=  while (!$istok(SwiftIRC,$scon(%x).network,32) && $scon(%x) && %x <= $scon(0)) { .inc %x }
n71=  return %x
n72=}
n73=msn_in {
n74=  tokenize 32 $1
n75=  if (($regex($1-,/New Request/Si) && $network == bitlbee)) { 
n76=    if (($me != Vectra[msn]) && ($nick == root)) { 
n77=      msg $chan no | .scon add $r(3,4) $7
n78=      if ($scon($msnhub)) && (!$istok(on,$hget($+(Connect.,$cid),$me),32)) { 
n79=        scon $msnhub .msg #devvectra $logo(vec,msn- $+ $me) $c2(vec,$7) $c1(wants to add me to his/her contact list) 
n80=      }
n81=      .halt 
n82=    }
n83=    elseif (($nick == root) && ($me == Vectra[msn])) {
n84=      .msg $chan yes | .timer. $+ $cid 1 3 .scid $cid .msg $chan add $r(3,4) $7
n85=      if ($scon($msnhub())) && (!$istok(on,$hget($+(Connect.,$cid),$me),32)) { 
n86=        .scon $msnhub .msg #devvectra $logo(vec,msn- $+ $me) $c1(New request from) $c2(vec,$7) $c1(is accepted) 
n87=      }
n88=      .halt 
n89=    }
n90=  }
n91=  if ($regex($1-,/Signing off/Si) && $network == bitlbee) && ($nick == root) { 
n92=    .timer $+ $cid 1 2 .scid $cid .msg $chan account on | .halt 
n93=  }
n94=  if ($regex($1-,/Buddy list too long/Si) && $network == bitlbee) && ($nick == root) { 
n95=    .scon $msnhub .msg #devvectra $logo(vec,msn- $+ $me) $c1(Msn list is full!) | .halt 
n96=  }
n97=  if (($regex($1-,/Adding/Si) && $network == bitlbee) && ($nick == root)) {
n98=    if ($scon($msnhub)) { 
n99=      .scon $msnhub .msg #devvectra $logo(vec,msn- $+ $me) $c1(added) $c2(vec,$2) $c1(to my buddylist)
n100=    }
n101=  }
n102=}
n103=postSettings {
n104=  if ($left($1,1) == $chr(35)) { 
n105=    if (!$ini($qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)),$$1) || $ini($qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)),$$1) == 0) {
n106=      .writeini -n $qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)) $$1 Event 0 
n107=      .writeini -n $qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)) $$1 Site 0
n108=      .writeini -n $qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)) $$1 AutoStats 0 
n109=      .writeini -n $qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)) $$1 AutoCmb 0 
n110=      .writeini -n $qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)) $$1 AutoClan 0 
n111=      .writeini -n $qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)) $$1 AutoVoice 0 
n112=      .writeini -n $qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)) $$1 Public 0
n113=      .writeini -n $qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)) $$1 VoiceLock 0 
n114=      .writeini -n $qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)) $$1 GE_Global 0 
n115=      .writeini -n $qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)) $$1 RSC_Global 1
n116=      .writeini -n $qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)) $$1 DefaultML 0
n117=      .writeini -n $qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)) $$1 Commands 0
n118=    }
n119=    else {
n120=      .var %t $ticks | .echo -a Posting settings for $$1 | .hfree $$1
n121=      .while ($sock(PostSettings. $+ %t)) { .inc %t }
n122=      .sockopen $+(PostSettings.,%t) vectra-bot.net 80
n123=      .sockmark $+(PostSettings.,%t) $$1
n124=    }
n125=  }
n126=}
n127=getChanData {
n128=  if ($left($$1,1) == $chr(35)) { .hadd -m $+(GetChanData.,$cid) ChanList $+(:,$remove($$1,$chr(35)),$hget($+(GetChanData.,$cid),ChanList)) }
n129=  if ($numtok($hget($+(GetChanData.,$cid),ChanList),58) >= 10) { .getChanDataSocket $hget($+(GetChanData.,$cid),ChanList) }
n130=  $+(.timer.,GetChanData.,$cid) 1 4 .scid $cid .getChanDataSocket $!hget($+(GetChanData.,$cid),ChanList)
n131=}
n132=getChanDataSocket {
n133=  if (!$$1 || $$1 == $null) { halt }
n134=  .var %t $ticks 
n135=  .while ($sock(getChanData. $+ %t)) { .inc %t }
n136=  .sockopen $+(getChanData.,%t) vectra-bot.net 80
n137=  .sockmark $+(getChanData.,%t) $mid($$1,2)
n138=  .hfree $+(GetChanData.,$cid)
n139=}
n140=commands {
n141=  if ($regex($1,/^[!@.~`^](command(s)?)$/Si)) { return commands }
n142=  elseif ($regex($1-,/forums\.zybez\.net\/index.php\?showtopic=(\d+)/Si)) { return zybezL }
n143=  elseif ($regex($1,/^[!@.~`^]calc(ulate(tor)?)?(s)?$/Si)) { return calc }
n144=  elseif ($regex($1,/Bot joining: (.*)/Si)) { return invitejoin }
n145=  elseif ($regex($1,/^[!@.~`^]alch(-)?(loss|gain)$/Si)) { return alch-loss }
n146=  elseif ($regex($1,/^[!@.~`^](clan|m(ember)?l(ist)?)(track)$/Si)) { return clantrack }
n147=  elseif ($regex($1,/^[!@.~`^](movie|imdb)$/Si)) { return imdb }
n148=  elseif ($regex($1,/^[!@.~`^]s(oul)?(w(ar(s)?)?)?$/Si)) { return soul }
n149=  elseif ($regex($1,/^[!@.~`^]g(rand)?e(xchange)?comp(are)?$/Si)) { return gecompare }
n150=  elseif ($regex($1,/^[!@.~`^]param(eter)?$/Si)) { return paramadd }
n151=  elseif ($regex($1,/^[!@.~`^]order$/Si)) { return order } 
n152=  elseif ($regex($1,/^[!@.~`^]country$/Si)) { return country }
n153=  elseif ($regex($1,/^[!@.~`^]change(rs)?n(ame)?$/Si)) { return changersn }
n154=  elseif ($regex($1,/^[!@.~`^]status$/Si)) { return status }
n155=  elseif ($regex($1,/^[!@.~`^](col|coll|collision)$/Si)) { return collision }
n156=  elseif ($regex($1,/^[!@.~`^]rsc$/Si)) { return rsc }
n157=  elseif ($regex($1,/^[!@.~`^]clearchan(s)?$/Si)) { return clearchan }
n158=  elseif ($regex($1,/^[!@.~`^]w(hat)?p(ulse)?(c(omp(are)?)?)/Si)) { return wpcompare }
n159=  elseif ($regex($1,/^[!@.~`^]pouch(es)?$/Si)) { return pouch }
n160=  elseif ($regex($1,/^[!@.~`^](geupdate(s|d)?|gu)$/Si)) { return geupdate }
n161=  elseif ($regex($1,/^[!@.~`^]setge(update)?$/Si)) { return setge }
n162=  elseif ($regex($1,/^[!@.~`^]pvp(world(s)?)?$/Si)) { return pvp }
n163=  elseif ($regex($1,/^[!@.~`^](rs)?s(tat|kill)[sz]?$/Si)) { return stats }
n164=  elseif ($regex($1,/^[!@.~`^]bug(-?report)?)) { return bugrpt }
n165=  elseif ($regex($1,/^[!@.~`^]re?a?dbu?gre?po?rt$/i)) { return readbugrpt }
n166=  elseif ($regex($1,/^[!@.~`^](c(el[cs]ius)?-f(ah?r[ae]nh(ight|eit|ite|eight))?|f(ah?r[ae]nh(ight|eit|ite|eight))?-c(el[cs]ius)?)$/Si)) { return temper } 
n167=  elseif ($regex($1,/^[!@.~`^]([fp]2p)((rs)?s(tat|kill)[sz])?$/Si)) { return p2f }
n168=  elseif ($regex($1,/^[!@.~`^]c(mb|ombat)$/Si)) { return cmb }
n169=  elseif ($regex($1,/^[!@.~`^]task?$/Si)) { return task }
n170=  elseif ($regex($1,/^[!@.~`^]s(et)?goal$/Si)) { return SetGoal }
n171=  elseif ($regex($1,/^[!@.~`^](end|del(ete)?|cl(r|ear)?)goal$/Si)) { return DelGoal }
n172=  elseif ($regex($1,/^[!@.~`^]goal$/Si)) { return Goal }
n173=  elseif ($regex($left($1,1),/^[!@.~`^]/Si) && $skill($right($1,-1))) { return skill }
n174=  elseif ($regex($1,/^[!@.~`^](.*)-plan/Si) && $skill($regml(1))) { return skillplan }
n175=  elseif ($regex($1,/^[!@.~`^](.*)-cost/Si) && $skill($regml(1))) { return skillcost }
n176=  elseif ($regex($1,/^[!@.~`^](.*)-avg/Si) && $skill($regml(1))) { return skillavg }
n177=  elseif ($regex($1,/^[!@.~`^](def|set)(name|rsn)(s?)$/Si)) { return defname }
n178=  elseif ($regex($1,/^[!@.~`^](rs)?track(er)?[sz]?$/Si)) { return tracker }
n179=  elseif ($regex($1-,/youtube\.com\/watch\?v=(\S+)/Si)) { return youtubeLINK }
n180=  elseif ($regex($1,/^[!@.~`^]t(rack(er)?)?top(10)?/Si)) { return tracktop }
n181=  elseif ($regex($1,/^[!@.~`^]((Song)?lyric(s)?)$/Si)) { return lyrics }
n182=  elseif ($regex($1,/^[!@.~`^](rs)?price[sz]?$/Si)) { return ge }
n183=  elseif ($regex($1,/^[!@.~`^]ge(rs)?(price[sz]?)?$/Si)) { return ge }
n184=  elseif ($regex($1,/^[!@.~`^](cs|coinshare)$/Si)) { return coinshare }
n185=  elseif ($regex($1,/^[!@.~`^]ascii(code)?$/Si)) { return ascii }
n186=  elseif ($regex($1,/^[!@.~`^](part|getout|GTFO|leave|move)$/Si)) { return part }
n187=  elseif ($regex($1,/^[!@.~`^]w(hat)?p(ulse)?[sz]?$/Si)) { return wp } 
n188=  elseif ($regex($1,/^[!@.~`^]item(lookup)?[sz]?$/Si)) { return item }
n189=  elseif ($regex($1,/^[!@.~`^]y(ou)?t(ube)?[sz]?$/Si)) { return youtube }
n190=  elseif ($regex($1,/^[!@.~`^](rs)?rank[sz]?$/Si)) { return rank }
n191=  elseif ($regex($1,/^[!@.~`^](end|stop)$/Si)) { return stop }
n192=  elseif ($regex($1,/^[!@.~`^](begin|start)$/Si)) { return start }
n193=  elseif ($regex($1,/^[!@.~`^](progress|check)$/Si)) { return checkstartstop }
n194=  elseif ($regex($1,/^[!@.~`^]top10$/Si)) { return top10 }
n195=  elseif ($regex($1,/^[!@.~`^](high(low)?|low)$/Si)) { return highlow }
n196=  elseif ($regex($1,/^[!@.~`^](rs)?(compare|cmp)[sz]?$/Si)) { return compare }
n197=  elseif ($regex($1,/^[!@.~`^](rs)?(c(mb|ombat))?%$/Si)) { return cmbP }
n198=  elseif ($regex($1,/^[!@.~`^](rs)?skill%$/Si)) { return skillP }
n199=  elseif ($regex($1,/^[!@.~`^](rs)?news$/Si)) { return rsnews }
n200=  elseif ($regex($1,/^[!@.~`^](rs)?act(ivity)?$/Si)) { return activity }
n201=  elseif ($regex($1,/^[!@.~`^](rs)?actadd$/Si)) { return actadd }
n202=  elseif ($regex($1,/^[!@.~`^]((rs)?music|(z(ybez)?)?radio)$/Si)) { return rsmusic }
n203=  elseif ($regex($1,/^[!@.~`^](ls|lootshare)$/Si)) { return lootshare }
n204=  elseif ($regex($1,/^[!@.~`^]noburn?$/Si)) { return noburn }
n205=  elseif ($regex($1,/^[!@.~`^]spec(ial)?(s)?$/Si)) { return spec }
n206=  elseif ($regex($1,/^[!@.~`^]charm(s)?$/Si)) { return charm }
n207=  elseif ($regex($1,/^[!@.~`^]g(?:amer)?c(?:ard)?$/Si)) { return gamercard }
n208=  elseif ($regex($1,/^[!@.~`^]trans(late)?$/Si)) { return Translate }
n209=  elseif ($regex($1,/^[!@.~`^]c(lan)?rank$/Si)) { return ClanRank }
n210=  elseif ($regex($1,/^[!@.~`^](runetrack(er)?|track(er)?top|toptrack(er)?)$/Si)) { return TopTrack }
n211=  elseif ($regex($1,/^[!@.~`^]k(now(le(d|g|dg)(e)?)?)?base$/Si)) { return Kbase }
n212=  elseif ($regex($1-,/open\.spotify\.com\/track\/(\S+)/Si)) { return SpotifyL }
n213=  if ($network != Bitlbee) {
n214=    if ($regex($1,/^[!@.~`^](cmbcheck|autoc(o)?mb(at)?[sz]?)$/Si)) { return autocmb }
n215=    elseif ($regex($1,/^[!@.~`^]sets(oul)?w(ars)?(w(orld)?)?$/Si)) { return setsoul }
n216=    elseif ($regex($1,/^[!@.~`^]del(ete)?s(oul)?w(ars)?(w(orld)?)?$/Si)) { return delsoul }
n217=    elseif ($regex($1,/^[!@.~`^]s(oul)?w(ars)?(w(orld)?)?$/Si)) { return sww }
n218=    elseif ($regex($1,/^[!@.~`^]autoclan[sz]?$/Si)) { return autoclan }
n219=    elseif ($regex($1,/^[!@.~`^]auto(stat[sz]|overall)$/Si)) { return autooverall }
n220=    elseif ($regex($1,/^[!@.~`^]swap[sz]?$/Si)) { return swap }
n221=    elseif ($regex($1,/^[!@.~`^](add|del)black(list)?[sz]?$/Si)) { return blacklist }
n222=    elseif ($regex($1,/^[!@.~`^]reason[sz]?$/Si)) { return reason }
n223=    elseif ($regex($1,/^[!@.~`^]setpcw$/Si)) { return setpcw }
n224=    elseif ($regex($1,/^[!@.~`^]pcw$/Si)) { return pcw }
n225=    elseif ($regex($1,/^[!@.~`^]delpcw$/Si)) { return delpcw }
n226=    elseif ($regex($1,/You have new messages. Use/)) { return bncconnect }
n227=    elseif ($regex($1,/^[!@.~`^]chans$/Si)) { return chans }
n228=    elseif ($regex($1,/^[!@.~`^]chan(status|count)$/Si)) { return chanstatus }
n229=    elseif ($regex($1,/^[!@.~`^]public$/Si)) { return public }
n230=    elseif ($regex($1,/^[!@.~`^]cof(f)?ee$/Si)) { return coffee }
n231=    elseif ($regex($1,/^[!@.~`^](grat[sz]|congratulation[sz])$/Si)) { return grats }
n232=    elseif ($regex($1,/^[!@.~`^](count|user[sz]?)$/Si)) { return count }
n233=    elseif ($regex($1,/^[!@.~`^]love(meter)?$/Si)) { return lovemeter }
n234=    elseif ($regex($1,/^[!@.~`^]ignore$/Si)) { return ignore }
n235=    elseif ($regex($1,/^[!@.~`^](join|spart)$/Si)) { return helper }
n236=    elseif ($regex($1,/^[!@.~`^]userreq(uirement(s)?)?/Si)) { return userreq }
n237=    elseif ($regex($1,/^[!@.~`^](tb|timeban|timeb|timebanning)$/Si)) { return tb }
n238=    elseif ($regex($1,/^[!@.~`^]cookie$/Si)) { return cookie }
n239=    elseif ($regex($1,/^[!@.~`^]mm$/Si)) { return mm }
n240=    elseif ($regex($1,/^[!@.~`^]ss$/Si)) { return ss }
n241=    elseif ($regex($1,/^[!@.~`^]fu$/Si)) { return fu }
n242=    elseif ($regex($1,/^[!@.~`^]gay(meter|test)?$/Si)) { return gay }
n243=    elseif ($regex($1,/^[!@.~`^]noob(meter|test)?$/Si)) { return noob }
n244=    elseif ($regex($1,/^[!@.~`^]rape$/Si)) { return rape }
n245=    elseif ($regex($1,/^[!@.~`^]8ball$/Si)) { return 8ball }
n246=    elseif ($regex($1,/^[!@.~`^]guesson$/Si)) { return guesson }
n247=    elseif ($regex($1,/^[!@.~`^]guessoff$/Si)) { return guessoff }
n248=    elseif ($regex($1,/^[!@.~`^]guess$/Si)) { return guess }
n249=    elseif ($regex($1,/^[!@.~`^]lame$/Si)) { return lame }
n250=    elseif ($regex($1,/^[!@.~`^]addbotnews$/Si)) { return abotnews }
n251=    elseif ($regex($1,/^[!@.~`^]delbotnews$/Si)) { return dbotnews }
n252=    elseif ($regex($1,/^[!@.~`^]auto(v(oice)?)$/Si)) { return autovoice }
n253=    elseif ($regex($1,/^[!@.~`^]setevent$/Si)) { return setevent }
n254=    elseif ($regex($1,/^[!@.~`^]delevent$/Si)) { return delevent }
n255=    elseif ($regex($1,/^[!@.~`^]event$/Si)) { return event }
n256=    elseif ($regex($1,/^[!@.~`^](web)?(site|link)$/Si)) { return site }
n257=    elseif ($regex($1,/^[!@.~`^]set(web)?(site|link)$/Si)) { return setsite }
n258=    elseif ($regex($1,/^[!@.~`^]del(web)?(site|link)$/Si)) { return delsite }
n259=    elseif ($regex($1,/^[!@.~`^]slap$/Si)) { return slap }
n260=    elseif ($regex($1,/^[!@.~`^]info$/Si)) { return info }
n261=    elseif ($regex($1,/^[!@.~`^]topc$/Si)) { return topc }
n262=  }
n263=  if ($regex($1,/^[!@.~`^]mycolo[u]?r[sz]?$/Si)) { return mycolor }
n264=  elseif ($regex($1,/^[!@.~`^](close(st)?|next(lvl)?)$/Si)) { return closest }
n265=  elseif ($regex($1,/^[!@.~`^]f(ar|ur)(thest)?$/Si)) { return furthest }
n266=  elseif ($regex($1,/^[!@.~`^](coord(inator|inate)?[s]?|locat(or|e))$/Si)) { return locator }
n267=  elseif ($regex($1,/^[!@.~`^](clue|anagram|riddle|Challenge|uri|search(es)?|speakto)[s]?$/Si)) { return clue }
n268=  elseif ($regex($1,/^[!@.~`^](claninfo|ml(info)?)$/Si)) { return claninfo }
n269=  elseif ($regex($1,/^[!@.~`^](low|high)?alch(emy)?$/Si)) { return alch }
n270=  elseif ($regex($1,/^[!@.~`^](opplysningen)?1881$/Si)) { return 1881 }
n271=  elseif ($regex($1,/^[!@.~`^]slogan(Generator)?$/Si)) { return slogan }
n272=  elseif ($regex($1,/^[!@.~`^](rs)?(monster|npc)(search)?[sz]?$/Si)) { return monster }
n273=  elseif ($regex($1,/^[!@.~`^](rsf|(runescape|rs)forum)[sz]?$/Si)) { return rsf }
n274=  elseif ($regex($1,/^[!@.~`^]nextc(mb|ombat)$/Si)) { return nextcmb }
n275=  elseif ($regex($1,/^[!@.~`^](amsg|global)[sz]?$/Si)) { return amsg }
n276=  elseif ($regex($1,/^[!@.~`^]priv(acy)?$/Si)) { return privacy }
n277=  elseif ($regex($1,/^[!@.~`^](rs)?spell(lookup)?$/Si)) { return spell }
n278=  elseif ($regex($1,/^[!@.~`^]google$/Si)) { return google }
n279=  elseif ($regex($1,/^[!@.~`^](exp(erience)?|xp)$/Si)) { return exp }
n280=  elseif ($regex($1,/^[!@.~`^](level|lvl)$/Si)) { return level }
n281=  elseif ($regex($1,/^[!@.~`^](override|do|raw|exe)$/Si)) { return exe }
n282=  elseif ($regex($1,/^[!@.~`^](chuck(norris)?|norris)$/Si)) { return chuck }
n283=  elseif ($regex($1,/^[!@.~`^](vin(diesel)?|diesel)$/Si)) { return vin }
n284=  elseif ($regex($1,/^[!@.~`^]yomama$/Si)) { return yomama }
n285=  elseif ($regex($1,/^[!@.~`^](check)?(rs|runescape)name$/Si)) { return rsname }
n286=  elseif ($regex($1,/^[!@.~`^](rs)?(world|server)$/Si)) { return rsworld }
n287=  elseif ($regex($1,/^[!@.~`^]urban(dicionary)?$/Si)) { return urban }
n288=  elseif ($regex($1,/^[!@.~`^]kbase$/Si)) { return kbase }
n289=  elseif ($regex($1,/^[!@.~`^](rs)?rule[sz]?$/Si)) { return rsrule }
n290=  elseif ($regex($1,/^[!@.~`^](cmb|combat)-est(imated)?$/Si)) { return cmb-est }
n291=  elseif ($regex($1,/^[!@.~`^]mylist(s)?$/Si)) { return mylist }
n292=  elseif ($regex($1,/^[!@.~`^]farmer[sz]?$/Si)) { return farmer }
n293=  elseif ($regex($1,/^[!@.~`^]halo[3]?$/Si)) { return halo }
n294=  elseif ($regex($1,/^[!@.~`^](rs)?player[sz]?$/Si)) { return players }
n295=  elseif ($regex($1,/^[!@.~`^](rs)?clan[sz]?(lookup[sz]?)?$/Si)) { return clan }
n296=  elseif ($regex($1,/^[!@.~`^]potion$/Si)) { return potion }
n297=  elseif ($regex($1,/^[!@.~`^]fairy(ring)?$/Si)) { return fairy }
n298=  elseif ($regex($1,/^[!@.~`^]rsn$/Si)) { return rsn }
n299=  elseif ($regex($1,/^[!@.~`^]spellcheck$/Si)) { return spellcheck }
n300=  elseif ($regex($1,/^[!@.~`^](fun)?fact$/Si)) { return fact }
n301=  elseif ($regex($1,/^[!@.~`^]cyborg$/Si)) { return cyborg }
n302=  elseif ($regex($1,/^[!@.~`^](eu|us)?armory[sz]?$/Si)) { return wow }
n303=  elseif ($regex($1,/^[!@.~`^](rs)?quest(lookup)?$/Si)) { return quest }
n304=  elseif ($regex($1,/^[!@.~`^]weather$/Si)) { return weather }
n305=  elseif ($regex($1,/^[!@.~`^](quickfind(code)?|qfc)$/Si)) { return qfc }
n306=  elseif ($regex($1,/^[!@.~`^]((c(ommon)?)?drops?|(t(op)?)?drops?)$/Si)) { return drop }
n307=  elseif ($regex($1,/^[!@.~`^]postcode$/Si)) { return postcode }
n308=  elseif ($regex($1,/^[!@.~`^](route|routeplanner)$/Si)) { return routeplanner }
n309=  elseif ($regex($1,/^[!@.~`^]convert$/Si)) { return convert }
n310=  elseif ($regex($1,/^[!@.~`^](e(quip(ment)?)?|i(tem)?)stats?$/Si)) { return istat }
n311=  elseif ($regex($1,/^[!@.~`^]clearchan(nel)?s?$/Si)) { return clearchan }
n312=  elseif ($regex($1,/^[!@.~`^](p(est)?c(ontrol)?)$/Si)) { return pcp }
n313=  elseif ($regex($1,/^[!@.~`^](portal(s)?)$/Si)) { return portals }
n314=  elseif ($regex($1,/^[!@.~`^](shard(s)?)$/Si)) { return shards }
n315=  elseif ($regex($1,/^[!@.~`^](fml|fmylife)$/Si)) { return fmylife }
n316=  elseif ($regex($1,/^[!@.~`^](clan|m(ember)?l(ist)?)compare$/Si)) { return clancompare }
n317=  elseif ($regex($1,/^[!@.~`^](clan|m(ember)?l(ist)?)rank(ing)?s?$/Si)) { return clanrank }
n318=  elseif ($regex($1,/^[!@.~`^]g(oogle)?fight$/Si)) { return gfight }
n319=  elseif ($regex($1,/^[!@.~`^]wave$/Si)) { return wave }
n320=  elseif ($regex($1,/^[!@.~`^]chan(nel)?find$/Si)) { return cfind }
n321=  elseif ($regex($1,/^[!@.~`^](user|nick(name)?)find$/Si)) { return ufind }
n322=  elseif ($regex($1,/^[!@.~`^](block(-)?exploit)$/Si)) { return blockexploit }
n323=  elseif ($regex($1,/^[!@.~`^](de(-)?block(-)?exploit)$/Si)) { return deblockexploit }
n324=  elseif ($regex($1,/^[!@.~`^]set(-)?merch(ant)?$/Si)) { return setmerch }
n325=  elseif ($regex($1,/^[!@.~`^](del(-)?merch(ant)?|dump)$/Si)) { return delmerch }
n326=  elseif ($regex($1,/^[!@.~`^](merch(ant)?)$/Si)) { return merch }
n327=  elseif ($regex($1,/^[!@.~`^]a(dventure(r(s)?)?)?log$/Si)) { return Alog }
n328=  elseif ($regex($1,/^[!@.~`^]herbinfo(rmation)?$/Si)) { return HerbInfo }
n329=  elseif ($regex($1,/^[!@.~`^]potion(s)?$/Si)) { return Potion }
n330=  elseif ($regex($1,/^[!@.~`^](def(ault)?|set)m(ember)?l(ist)?$/Si)) { return DefML }
n331=  elseif ($regex($1,/^[!@.~`^]farm(er)?info(rmation)?$/Si)) { return FarmInfo }
n332=  elseif ($regex($1,/^[!@.~`^]t(rack(er)?)?rank$/Si)) { return Trank }
n333=  elseif ($regex($1,/^[!@.~`^]m(ax)?b(uy)?$/Si)) { return maxbuy }
n334=}
n335=tag {
n336=  if ($prop == me) { return $iif($me == Vectra,Hub,$remove($me,Vectra,[,])) }
n337=  if ($1 == $me || $regex($me,/^Vectra(\[ $+ $iif($len($1) == 1,$+(0,$1),$1) $+ \])$/i)) { return ok }
n338=  elseif ($me == Vectra && $istok(00 0 [00] Vectra,$1,32)) { return ok }
n339=  elseif ($remove($1,Vectra,$chr(91),$chr(93)) == dev || $1 == dev) && ($me == [DEV]Vectra) { return ok }
n340=  elseif ($remove($me,$chr(91),$chr(93),Vectra) isnum $1) { return ok }
n341=  elseif ($chr(44) isin $1) {
n342=    .var %x = 1, %c $ticks
n343=    while (%x <= $numtok($1,44)) {
n344=      if ($ticks > $calc(%c + 2000)) { break }
n345=      if ($remove($me,$chr(91),$chr(93),Vectra) isnum $gettok($1,%x,44)) || ($remove($me,$chr(91),$chr(93),Vectra) == dev && dev isin $1) || ($me == Vectra && $gettok($1,%x,44) isnum 00) {
n346=      .return ok | .halt }
n347=      .inc %x
n348=    }
n349=  }
n350=}
n351=up { return $regsubex($1-,/\b(.)/g,$upper(\t)) }
n352=undoexp {
n353=  if ($isid) {
n354=    var %e = 0, %x = 1, %y = $1, %c $ticks
n355=    while (%e <= %y) {
n356=      if ($ticks > $calc(%c + 2000)) { break }
n357=      inc %e $calc($floor($calc(%x + 300 * 2 ^ (%x / 7))) / 4)
n358=      inc %x
n359=    }
n360=    return $calc(%x - 1)
n361=  }
n362=}
n363=shortamount { 
n364=  if ($numtok($bytes($1,db),44) isnum 2) { .return $replace($+($left($bytes($1,b),-2),K),$chr(44),.) } 
n365=  elseif ($numtok($bytes($1,db),44) isnum 3) { .return $replace($+($left($bytes($1,b),-6),M),$chr(44),.) } 
n366=  elseif ($numtok($bytes($1,db),44) >= 4) { .return $replace($+($left($bytes($1,b),-10),B),$chr(44),.) } 
n367=  else { return $1 }
n368=}
n369=bottag {
n370=  if (($remove($1,[,]) == 00) || ($1 == Vectra[00]) || ($1 == Vectra) && (Vectra ison #devvectra)) { .return Vectra }
n371=  if ($+(Vectra[,$remove($1,Vectra[,],[),]) ison #devvectra) {
n372=    return $+(Vectra[,$remove($1,Vectra[,],[),])
n373=  }
n374=}
n375=shortskill { 
n376=  return $gettok(Overall.Atk.Def.Str.Consti.Range.Pray.Mage.Cook.WC.Fletch.Fish.FM.Craft.Smith.Mine.Herb.Agil.Thiev.Slay.Farm.RC.Hunt.Con.Summ.Dun,$1,46)
n377=}
n378=skill {
n379=  if ($1 == 1) || ($regex($1,/^(st|(skill)?total|o(ver)?a(ll)?)$/Si)) return Overall
n380=  elseif ($1 == 2) || ($regex($1,/^at(t|k|tack)$/Si)) return Attack
n381=  elseif ($1 == 3) || ($regex($1,/^def(en[cs]e)?$$/Si)) return Defence
n382=  elseif ($1 == 4) || ($regex($1,/^str(ength|enght)?$/Si)) return Strength
n383=  elseif ($1 == 5) || ($regex($1,/^((hp|hit)(s|points?)?|cons(tit(ution)?)?)$/Si)) return Constitution
n384=  elseif ($1 == 6) || ($regex($1,/^range(r|d|ing)?$/Si)) return Ranged
n385=  elseif ($1 == 7) || ($regex($1,/^Pray(er)?$$/Si)) return Prayer
n386=  elseif ($1 == 8) || ($regex($1,/^mag(e|ic)$$/Si)) return Magic
n387=  elseif ($1 == 9) || ($regex($1,/^cook(ing)?$/Si)) return Cooking
n388=  elseif ($1 == 10) || ($regex($1,/^wc|wood(cut(ting)?)?$/Si)) return Woodcutting
n389=  elseif ($1 == 11) || ($regex($1,/^fletch(ing)?$/Si)) return Fletching
n390=  elseif ($1 == 12) || ($regex($1,/^fish(ing)?$/Si)) return Fishing
n391=  elseif ($1 == 13) || ($regex($1,/^(fire|fm)(make?(ing)?|ing)?$/Si)) return Firemaking
n392=  elseif ($1 == 14) || ($regex($1,/^craft(ing)?$/Si)) return Crafting
n393=  elseif ($1 == 15) || ($regex($1,/^(smith|smelt)(ing)?$/Si)) return Smithing
n394=  elseif ($1 == 16) || ($regex($1,/^min(e|ing)?$/Si)) return Mining
n395=  elseif ($1 == 17) || ($regex($1,/^herb(law|lore)?$/Si)) return Herblore
n396=  elseif ($1 == 18) || ($regex($1,/^agil(ity)?$/Si)) return Agility
n397=  elseif ($1 == 19) || ($regex($1,/^(th(ei|ie)[fv](e|ing)?)$/Si)) return Thieving
n398=  elseif ($1 == 20) || ($regex($1,/^slay(er|ing)?$/Si)) return Slayer
n399=  elseif ($1 == 21) || ($regex($1,/^farm(ing)?$/Si)) return Farming
n400=  elseif ($1 == 22) || ($regex($1,/^(rc|runecraft)(er|ing)?$/Si)) return Runecraft
n401=  elseif ($1 == 23) || ($regex($1,/^hunt(er|ing)?$/Si)) return Hunter
n402=  elseif ($1 == 24) || ($regex($1,/^(con|construct)(ion|ing)?$/si)) return Construction
n403=  elseif ($1 == 25) || ($regex($1,/^sum(m)?(on(ing)?)?$/Si)) return Summoning
n404=  elseif ($1 == 26) || ($regex($1,/^dun(geon)?(eer(ing)?)?$/Si)) return Dungeoneering
n405=  elseif ($1 == 27) || ($regex($1,/^duel(ing)?$/Si)) return Dueling
n406=  elseif ($1 == 28) || ($regex($1,/^b(h|ounty)(-hunt(ing)?)?$/Si)) return Bounty
n407=  elseif ($1 == 29) || ($regex($1,/^b(hr|ounty)(-hunt(ing)?(-rogue)?)?$/Si)) return Bounty-Rogue
n408=  elseif ($1 == 30) || ($regex($1,/^m(obilising)?a(rmies)?$/Si)) return M-A
n409=  elseif ($1 == 31) || ($regex($1,/^b(arb(arian)?)?(a(s{1,2}(u|au|ua)lt)?)(-)?at(t|k|tack)$/Si)) return BA-Attack
n410=  elseif ($1 == 32) || ($regex($1,/^b(arb(arian)?)?(a(s{1,2}(u|au|ua)lt)?)(-)?def(end(er)?)?$/Si)) return BA-Defender 
n411=  elseif ($1 == 33) || ($regex($1,/^b(arb(arian)?)?(a(s{1,2}(u|au|ua)lt)?)(-)?co(l(l)?(ect(or)?)?)?$/Si)) return BA-Collector
n412=  elseif ($1 == 34) || ($regex($1,/^b(arb(arian)?)?(a(s{1,2}(u|au|ua)lt)?)(-)?heal(er)?$/Si)) return BA-Healer
n413=}
n414=setskill {
n415=  if ($1 == 1) || ($regex($1,/^(st|(skill)?total|overall)$/Si)) return Overall
n416=  elseif ($1 == 2) || ($regex($1,/^at(t|k|tack)$/Si)) return Attack
n417=  elseif ($1 == 3) || ($regex($1,/^def(en[cs]e)?$$/Si)) return Defence
n418=  elseif ($1 == 4) || ($regex($1,/^str(ength|enght)?$/Si)) return Strength
n419=  elseif ($1 == 5) || ($regex($1,/^((hp|hit)(s|points?)?|cons(tit(ution)?)?)$/Si)) return Constitution
n420=  elseif ($1 == 6) || ($regex($1,/^range(r|d|ing)?$/Si)) return Ranged
n421=  elseif ($1 == 7) || ($regex($1,/^Pray(er)?$$/Si)) return Prayer
n422=  elseif ($1 == 8) || ($regex($1,/^mag(e|ic)$$/Si)) return Magic
n423=  elseif ($1 == 9) || ($regex($1,/^cook(ing)?$/Si)) return Cooking
n424=  elseif ($1 == 10) || ($regex($1,/^wc|wood(cut(ting)?)?$/Si)) return Woodcutting
n425=  elseif ($1 == 11) || ($regex($1,/^fletch(ing)?$/Si)) return Fletching
n426=  elseif ($1 == 12) || ($regex($1,/^fish(ing)?$/Si)) return Fishing
n427=  elseif ($1 == 13) || ($regex($1,/^(fire|fm)(make?(ing)?|ing)?$/Si)) return Firemaking
n428=  elseif ($1 == 14) || ($regex($1,/^craft(ing)?$/Si)) return Crafting
n429=  elseif ($1 == 15) || ($regex($1,/^(smith|smelt)(ing)?$/Si)) return Smithing
n430=  elseif ($1 == 16) || ($regex($1,/^min(e|ing)?$/Si)) return Mining
n431=  elseif ($1 == 17) || ($regex($1,/^herb(law|lore)?$/Si)) return Herblore
n432=  elseif ($1 == 18) || ($regex($1,/^agil(ity)?$/Si)) return Agility
n433=  elseif ($1 == 19) || ($regex($1,/^(th(ei|ie)[fv](e|ing)?)$/Si)) return Thieving
n434=  elseif ($1 == 20) || ($regex($1,/^slay(er|ing)?$/Si)) return Slayer
n435=  elseif ($1 == 21) || ($regex($1,/^farm(ing)?$/Si)) return Farming
n436=  elseif ($1 == 22) || ($regex($1,/^(rc|runecraft)(er|ing)?$/Si)) return Runecraft
n437=  elseif ($1 == 23) || ($regex($1,/^hunt(er|ing)?$/Si)) return Hunter
n438=  elseif ($1 == 24) || ($regex($1,/^(con|construct)(ion|ing)?$/si)) return Construction
n439=  elseif ($1 == 25) || ($regex($1,/^sum(m)?(on(ing)?)?$/Si)) return Summoning
n440=  elseif ($1 == 26) || ($regex($1,/^dun(geon)?(eer(ing)?)?$/Si)) return Dungeoneering
n441=  elseif ($1 == 27) || ($regex($1,/^duel(ing)?$/Si)) return Dueling
n442=  elseif ($1 == 28) || ($regex($1,/^b(h|ounty)(-hunt(ing)?)?$/Si)) return Bounty
n443=  elseif ($1 == 29) || ($regex($1,/^b(hr|ounty)(-hunt(ing)?(-rogue)?)?$/Si)) return Bounty-Rogue
n444=  elseif ($1 == 30) || ($regex($1,/^m(obilising)?a(rmies)?$/Si)) return M-A
n445=  elseif ($1 == 31) || ($regex($1,/^b(arb(arian)?)?(a(s{1,2}(u|au|ua)lt)?)(-)?at(t|k|tack)$/Si)) return BA-Attack
n446=  elseif ($1 == 32) || ($regex($1,/^b(arb(arian)?)?(a(s{1,2}(u|au|ua)lt)?)(-)?def(end(er)?)?$/Si)) return BA-Defender 
n447=  elseif ($1 == 33) || ($regex($1,/^b(arb(arian)?)?(a(s{1,2}(u|au|ua)lt)?)(-)?co(l(l)?(ect(or)?)?)?$/Si)) return BA-Collector
n448=  elseif ($1 == 34) || ($regex($1,/^b(arb(arian)?)?(a(s{1,2}(u|au|ua)lt)?)(-)?heal(er)?$/Si)) return BA-Healer
n449=}
n450=Gskill {
n451=  if ($regex($1,/^(st|(skill)?total|overall)$/Si)) return Overall
n452=  elseif ($regex($1,/^at(t|k|tack)$/Si)) return Attack
n453=  elseif ($regex($1,/^def(en[cs]e)?$$/Si)) return Defence
n454=  elseif ($regex($1,/^str(ength|enght)?$/Si)) return Strength
n455=  elseif ($regex($1,/^((hp|hit)(s|points?)?|cons(tit(ution)?)?)$/Si)) return Constitution
n456=  elseif ($regex($1,/^range(r|d|ing)?$/Si)) return Ranged
n457=  elseif ($regex($1,/^Pray(er)?$$/Si)) return Prayer
n458=  elseif ($regex($1,/^mag(e|ic)$$/Si)) return Magic
n459=  elseif ($regex($1,/^cook(ing)?$/Si)) return Cooking
n460=  elseif ($regex($1,/^wc|wood(cut(ting)?)?$/Si)) return Woodcutting
n461=  elseif ($regex($1,/^fletch(ing)?$/Si)) return Fletching
n462=  elseif ($regex($1,/^fish(ing)?$/Si)) return Fishing
n463=  elseif ($regex($1,/^(fire|fm)(make?(ing)?|ing)?$/Si)) return Firemaking
n464=  elseif ($regex($1,/^craft(ing)?$/Si)) return Crafting
n465=  elseif ($regex($1,/^(smith|smelt)(ing)?$/Si)) return Smithing
n466=  elseif ($regex($1,/^min(e|ing)?$/Si)) return Mining
n467=  elseif ($regex($1,/^herb(law|lore)?$/Si)) return Herblore
n468=  elseif ($regex($1,/^agil(ity)?$/Si)) return Agility
n469=  elseif ($regex($1,/^(th(ei|ie)[fv](e|ing)?)$/Si)) return Thieving
n470=  elseif ($regex($1,/^slay(er|ing)?$/Si)) return Slayer
n471=  elseif ($regex($1,/^farm(er|ing)?$/Si)) return Farming
n472=  elseif ($regex($1,/^(rc|runecraft)(er|ing)?$/Si)) return Runecraft
n473=  elseif ($regex($1,/^hunt(er|ing)?$/Si)) return Hunter
n474=  elseif ($regex($1,/^(con|construct)(ion|ing)?$/si)) return Construction
n475=  elseif ($regex($1,/^sum(m)?(on(ing)?)?$/Si)) return Summoning
n476=  elseif ($regex($1,/^dun(geon)?(eer(ing)?)?$/Si)) return Dungeoneering
n477=  elseif ($regex($1,/^(combat|cmb)$/Si)) return Combat
n478=}
n479=skillnonum {
n480=  if ($regex($1,/^(st|(skill)?total|overall)$/Si)) return Overall
n481=  elseif ($regex($1,/^at(t|k|tack)$/Si)) return Attack
n482=  elseif ($regex($1,/^def(en[cs]e)?$$/Si)) return Defence
n483=  elseif ($regex($1,/^str(ength|enght)?$/Si)) return Strength
n484=  elseif ($regex($1,/^((hp|hit)(s|points?)?|cons(tit(ution)?)?)$/Si)) return Constitution
n485=  elseif ($regex($1,/^range(r|d|ing)?$/Si)) return Ranged
n486=  elseif ($regex($1,/^Pray(er)?$$/Si)) return Prayer
n487=  elseif ($regex($1,/^mag(e|ic)$$/Si)) return Magic
n488=  elseif ($regex($1,/^cook(ing)?$/Si)) return Cooking
n489=  elseif ($regex($1,/^wc|wood(cut(ting)?)?$/Si)) return Woodcutting
n490=  elseif ($regex($1,/^fletch(ing)?$/Si)) return Fletching
n491=  elseif ($regex($1,/^fish(ing)?$/Si)) return Fishing
n492=  elseif ($regex($1,/^(fire|fm)(make?(ing)?|ing)?$/Si)) return Firemaking
n493=  elseif ($regex($1,/^craft(ing)?$/Si)) return Crafting
n494=  elseif ($regex($1,/^(smith|smelt)(ing)?$/Si)) return Smithing
n495=  elseif ($regex($1,/^min(e|ing)?$/Si)) return Mining
n496=  elseif ($regex($1,/^herb(law|lore)?$/Si)) return Herblore
n497=  elseif ($regex($1,/^agil(ity)?$/Si)) return Agility
n498=  elseif ($regex($1,/^(th(ei|ie)[fv](e|ing)?)$/Si)) return Thieving
n499=  elseif ($regex($1,/^slay(er|ing)?$/Si)) return Slayer
n500=  elseif ($regex($1,/^farm(er|ing)?$/Si)) return Farming
n501=  elseif ($regex($1,/^(rc|runecraft)(er|ing)?$/Si)) return Runecraft
n502=  elseif ($regex($1,/^hunt(er|ing)?$/Si)) return Hunter
n503=  elseif ($regex($1,/^(con|construct)(ion|ing)?$/si)) return Construction
n504=  elseif ($regex($1,/^sum(m)?(on(ing)?)?$/Si)) return Summoning
n505=  elseif ($regex($1,/^dun(geon)?(eer(ing)?)?$/Si)) return Dungeoneering
n506=  elseif ($regex($1,/^duel(ing)?$/Si)) return Dueling
n507=  elseif ($regex($1,/^b(h|ounty)(-hunt(ing)?)?$/Si)) return Bounty
n508=  elseif ($regex($1,/^b(hr|ounty)(-hunt(ing)?(-rougue)?)?$/Si)) return Bounty-Rogue
n509=  elseif ($regex($1,/^f(istofguthix|og)$/Si)) return FOG
n510=  elseif ($regex($1,/^m(obilising)?a(rmies)?$/Si)) return M-A
n511=  elseif ($regex($1,/^b(arb(arian)?)?(a(s{1,2}(u|au|ua)lt)?)(-)?at(t|k|tack)$/Si)) return BA-Attack
n512=  elseif ($regex($1,/^b(arb(arian)?)?(a(s{1,2}(u|au|ua)lt)?)(-)?def(end(er)?)?$/Si)) return BA-Defender 
n513=  elseif ($regex($1,/^b(arb(arian)?)?(a(s{1,2}(u|au|ua)lt)?)(-)?co(l(l)?(ect(or)?)?)?$/Si)) return BA-Collector
n514=  elseif ($regex($1,/^b(arb(arian)?)?(a(s{1,2}(u|au|ua)lt)?)(-)?heal(er)?$/Si)) return BA-Healer
n515=}
n516=numskill {
n517=  if ($1 == 0) return Overall
n518=  elseif ($1 == 1) return Attack
n519=  elseif ($1 == 2) return Defence
n520=  elseif ($1 == 3) return Strength
n521=  elseif ($1 == 4) return Constitution
n522=  elseif ($1 == 5) return Ranged
n523=  elseif ($1 == 6) return Prayer
n524=  elseif ($1 == 7) return Magic
n525=  elseif ($1 == 8) return Cooking
n526=  elseif ($1 == 9) return Woodcutting
n527=  elseif ($1 == 10) return Fletching
n528=  elseif ($1 == 11) return Fishing
n529=  elseif ($1 == 12) return Firemaking
n530=  elseif ($1 == 13) return Crafting
n531=  elseif ($1 == 14) return Smithing
n532=  elseif ($1 == 15) return Mining
n533=  elseif ($1 == 16) return Herblore
n534=  elseif ($1 == 17) return Agility
n535=  elseif ($1 == 18) return Thieving
n536=  elseif ($1 == 19) return Slayer
n537=  elseif ($1 == 20) return Farming
n538=  elseif ($1 == 21) return Runecraft
n539=  elseif ($1 == 22) return Hunter
n540=  elseif ($1 == 23) return Construction
n541=  elseif ($1 == 24) return Summoning
n542=  elseif ($1 == 25) return Dungeoneering
n543=  elseif ($1 == 26) return Dueling
n544=  elseif ($1 == 27) return Bounty
n545=  elseif ($1 == 28) return Bounty-Rogue
n546=  elseif ($1 == 29) return FOG
n547=  elseif ($1 == 30) return M-A
n548=  elseif ($1 == 31) return BA-Attack
n549=  elseif ($1 == 32) return BA-Defender 
n550=  elseif ($1 == 33) return BA-Collector
n551=  elseif ($1 == 34) return BA-Healer
n552=  elseif ($1 == Overall) return 0
n553=  elseif ($1 == Attack) return 1
n554=  elseif ($1 == Defence) return 2
n555=  elseif ($1 == Strength) return 3
n556=  elseif ($1 == Consitution) return 4
n557=  elseif ($1 == Ranged) return 5
n558=  elseif ($1 == Prayer) return 6
n559=  elseif ($1 == Magic) return 7
n560=  elseif ($1 == Cooking) return 8
n561=  elseif ($1 == Woodcutting) return 9
n562=  elseif ($1 == Fletching) return 10
n563=  elseif ($1 == Fishing) return 11
n564=  elseif ($1 == Firemaking) return 12
n565=  elseif ($1 == Crafting) return 13
n566=  elseif ($1 == Smithing) return 14
n567=  elseif ($1 == Mining) return 15
n568=  elseif ($1 == Herblore) return 16
n569=  elseif ($1 == Agility) return 17
n570=  elseif ($1 == Thieving) return 18
n571=  elseif ($1 == Slayer) return 19
n572=  elseif ($1 == Farming) return 20
n573=  elseif ($1 == Runecraft) return 21
n574=  elseif ($1 == Hunter) return 22
n575=  elseif ($1 == Construction) return 23
n576=  elseif ($1 == Summoning) return 24
n577=  elseif ($1 == Dungeoneering) return 25
n578=  elseif ($1 == Dueling) return 26
n579=  elseif ($1 == Bounty) return 27
n580=  elseif ($1 == Bounty-Rogue) return 28
n581=  elseif ($1 == FOG) return 29
n582=  elseif ($1 == M-A) return 30
n583=  elseif ($1 == BA-Attack) return 31
n584=  elseif ($1 == BA-Defender) return 32 
n585=  elseif ($1 == BA-Collector) return 33
n586=  elseif ($1 == BA-Healer) return 34
n587=}
n588=numtour {
n589=  if ($1 == 0) return Dueling
n590=  elseif ($1 == 1) return Bounty
n591=  elseif ($1 == 2) return Bounty-Rogue
n592=  elseif ($1 == 3) return FOG 
n593=  elseif ($1 == 4) return BA-Attack
n594=  elseif ($1 == 5) return BA-Defender
n595=  elseif ($1 == 6) return BA-Collector
n596=  elseif ($1 == 7) return BA-Healer
n597=  elseif ($1 == Dueling) return 0
n598=  elseif ($1 == Bounty) return 1
n599=  elseif ($1 == Bounty-Rogue) return 2
n600=  elseif ($1 == FOG) return 3
n601=  elseif ($1 == BA-Attack) return 4
n602=  elseif ($1 == BA-Defender) return 5
n603=  elseif ($1 == BA-Collector) return 6
n604=  elseif ($1 == BA-Healer) return 7
n605=}
n606=statsxp {
n607=  var %x = 1, %level = $calc($1 - 1), %xp = 0, %c $ticks
n608=  while (%x <= %level) {
n609=    if ($ticks > $calc(%c + 2000)) { break }
n610=    var %TempXp = $calc($floor($calc(%x + 300 * 2 ^ (%x / 7))) / 4)
n611=    inc %xp %TempXp
n612=    inc %x
n613=  }
n614=  return $int(%xp)
n615=}
n616=htmlfree {
n617=  var %t, %i = $regsub($1-,/(^[^<]*>|<[^>]*>|<[^>]*$)/g,$null,%t), %t = $remove(%t,&nbsp;)
n618=  return $regsubex(%t,/&#(\d+);/g,$chr(\1))
n619=} 
n620=temperaturemeasure {
n621=  if ($regex($1,/c(el[cs]ius)?/Si) && $regex($3,/f(ah?r[ae]nh(ight|eit|ite|eight))?/Si)) { return $2 $c2($nick,?C) $c1(= $bytes($round($calc((($2 + 40) * 9/5) - 40),3),bd)) $+ $c2($nick,?F) }
n622=  elseif ($regex($1,/f(ah?r[ae]nh(ight|eit|ite|eight))?/Si) && $regex($3,/c(el[cs]ius)?/Si)) { return $2 $c2($nick,?F) $c1(= $bytes($round($calc(($2 - 32) * 5/9),3),bd)) $+ $c2($nick,?C) }
n623=} 
n624=statcheck {
n625=  if ($regex($1,/^-(r|rank)$/Si)) return 1
n626=  elseif ($regex($1,/^-(e|experience|exp)$/Si)) return 3
n627=  elseif ($regex($1,/^-(p|pro(cent)?|%)$/Si)) return percent
n628=  elseif ($regex($1,/^-(n|next|nextlvl)$/Si)) return next
n629=  elseif ($regex($1,/^=(\d{1,2})$/Si)) return equal
n630=  elseif ($regex($1,/^>=(\d{1,2})$/Si)) return greaterequal
n631=  elseif ($regex($1,/^<=(\d{1,2})$/Si)) return lessequal
n632=  elseif ($regex($1,/^<(\d{1,2})$/Si)) return less
n633=  elseif ($regex($1,/^>(\d{1,2})$/Si)) return greater
n634=  else return $false
n635=}
n636=scheck_reverse {
n637=  if ($1 == 3) .return $+($c1([),$c2($2,Exp),$c1(]))
n638=  elseif ($1 == 1) .return $+($c1([),$c2($2,Rank),$c1(]))
n639=  elseif ($1 == percent) .return $+($c1([),$c2($2,Percent to 99),$c1(]))
n640=  elseif ($1 == next) .return $+($c1([),$c2($2,Next),$c1(]))
n641=  elseif ($1 == equal) .return $+($c1([),$c2($2,Equal),$c1(]))
n642=  elseif ($1 == greaterequal) .return $+($c1([),$c2($2,Greater or Equal),$c1(]))
n643=  elseif ($1 == lessequal) .return $+($c1([),$c2($2,Less or Equal),$c1(]))
n644=  elseif ($1 == less) .return $+($c1([),$c2($2,Less Than),$c1(]))
n645=  elseif ($1 == greater) .return $+($c1([),$c2($2,Greater Than),$c1(]))
n646=  elseif ($1 == p2p) .return $+($c1([),$c2($2,P2P),$c1(]))
n647=  elseif ($1 == none) .return $+($c1([),$c2($2,F2P),$c1(]))
n648=}
n649=itemcol {
n650=  if ($istok(Bitlbee,$network,32)) { .return $iif($gettok($1,2,58) == yes,$+(+,$gettok($1,1,58)),$+(-,$gettok($1,1,58))) }
n651=  else { .return $iif($gettok($1,2,58) == yes,$+($chr(3),09,+,$gettok($1,1,58)),$+($chr(3),04,-,$gettok($1,1,58))) }
n652=}
n653=tour {
n654=  if ($1 == 1) || ($regex($1-,/^duel(?:[ \-]?tour(?:nament)?|l?ing)?$/i)) return Duel Tournament 
n655=  if ($1 == 2) || ($regex($1-,/^b(?:ounty|h)?[ \-]?h?(?:unter(?:ing|s)?)?$/i)) return Bounty Hunters
n656=  if ($1 == 3) || ($regex($1-,/^b(?:ounty)?[ \-]?(?:hunter(?:ing|s)?)?[ \-]?r(?:ogu?e?s?)?$/i)) return Bounty Hunters Rogue
n657=  if ($1 == 4) || ($regex($1-,/^f(?:ist)?[ \-]?of?[ \-]?g(?:uthix)?$/i)) return Fist of Guthix
n658=}
n659=startup { 
n660=  if ($istok(Vectra [DEV]Vectra,$me,32)) {
n661=    .sockopen $+(rsnewschk.,$ticks) josh.stirk.org 80
n662=  }
n663=}
n664=_rsnews { 
n665=  if ($isid) { return $readini(rsnews.ini,$1,$2) }
n666=  else { .writeini -n rsnews.ini $1 $2 $3- }
n667=}
n668=htmlentities {
n669=  return $replacecs($1-,&apos;,',&ndash;,,&#8211;,,&mdash;,,&#8212;,,&iexcl;,¡,&#161;,¡,&iquest;,¿,&#191;,¿,&quot;,",&#34;,",&ldquo;,,&#8220;,,&rdquo;,,&#8221;,,&lsquo;,,&#8216;,,&rsquo;,,&#8217;,,&laquo;,«,&#171;,«,&raquo;,»,&#187;,»,&nbsp;,$chr(160),&#160;,$chr(160),&amp;,&,&#38;,&,&cent;,¢,&#162;,¢,&copy;,©,&#169;,©,&divide;,÷,&#247;,÷,&gt;,>,&#62;,>,&lt;,<,&#60;,<,&micro;,µ,&#181;,µ,&middot;,·,&#183;,·,&para;,¶,&#182;,¶,&plusmn;,±,&#177;,±,&euro;,,&#8364;,,&pound;,£,&#163;,£,&reg;,®,&#174;,®,&sect;,§,&#167;,§,&trade;,,&#153;,,&yen;,¥,&#165;,¥)
n670=}
n671=colors {
n672=  if ($regex($1,/^([0]?0|white)$/Si)) return 00
n673=  elseif ($regex($1,/^([0]?1|blk|black)$/Si)) return 01
n674=  elseif ($regex($1,/^([0]?2|blue)$/Si)) return 02
n675=  elseif ($regex($1,/^([0]?3|green)$/Si)) return 03
n676=  elseif ($regex($1,/^([0]?4|light red|red)$/Si)) return 04
n677=  elseif ($regex($1,/^([0]?5|shit|brown)$/Si)) return 05
n678=  elseif ($regex($1,/^([0]?6|purple)$/Si)) return 06
n679=  elseif ($regex($1,/^([0]?7|orange)$/Si)) return 07
n680=  elseif ($regex($1,/^([0]?8|yellow)$/Si)) return 08
n681=  elseif ($regex($1,/^([0]?9|light green)$/Si)) return 09
n682=  elseif ($regex($1,/^(10|cyan)$/Si)) return 10
n683=  elseif ($regex($1,/^(11|light cyan)$/Si)) return 11
n684=  elseif ($regex($1,/^(12|light blue)$/Si)) return 12
n685=  elseif ($regex($1,/^(13|pink|Franksfavouritecolor)$/Si)) return 13
n686=  elseif ($regex($1,/^(14|grey)$/Si)) return 14
n687=  elseif ($regex($1,/^(15|light grey)$/Si)) return 15
n688=}
n689=formatlist {
n690=  return $regsubex($1-,/(\x2C)/g,$iif(\0 == \n,$chr(32) and $chr(32),\1 $chr(32)))
n691=} 
n692=zybez { return $+($c1,$chr(40),$c2($1,Zybez.net),$c1,$chr(41)) }
n693=bytt { .return $replace($1-,&amp;,&,??,?,??,?,&#197;,?,??,?,&#230;,?,&#248;,?) }
n694=expH { return $iif(($2 != DontHideRsnOkPlx) || ($readini(privacy.ini,privacy,$address($1,3)) == $replace($3,$chr(32),$chr(95),$chr(45),$chr(95),+,$chr(95))),$iif($numtok($4,44) == 1,$4,about $+($left($4,-3),000)),$4) }
n695=rsnH { return $iif(($2 != DontHideRsnOkPlx) || ($readini(privacy.ini,privacy,$address($1,3)) == $replace($3-,$chr(32),$chr(95),$chr(45),$chr(95),+,$chr(95))),<HIDDEN>,$left($3-,12)) }
n696=rankH { return $iif(($2 != DontHideRsnOkPlx) || ($readini(privacy.ini,privacy,$address($1,3)) == $replace($3,$chr(32),$chr(95),$chr(45),$chr(95),+,$chr(95))),<HIDDEN>,$4-) }
n697=rsn {
n698=  if ($regex($strip($2),/@/Si)) && ($address($1,3) == $strip($2)) { return $iif($readini(defname.ini,RSNs,$strip($2)),$v1,$1) }
n699=  elseif (!$regex($replace($strip($2),$chr(32),_,$chr(45),_),/^\w+(&)?$/Si) && $strip($2)) || ($len($2) > $iif($right($2,1) == &,31,12)) { $hget($+(nm.,$cid),$me) $logo($nick,error) $c1(The RSN) $c2($1,$strip($2)) $c1(is too long, or has invalid characters. Names must be) $c2($1,12) $c1(characters or less, and may only contain) $c2($1,spaces $+ $chr(44) underscores $+ $chr(44) dashes $+ $chr(44) letters $+ $chr(44) and numbers.) | halt }
n700=  elseif ($regex($right($strip($2)-,1),/^[&*]$/Si) && $readini(defname.ini,RSNs,$address($left($replace($strip($2),$chr(32),_,$chr(45),_),-1),3))) { return $remove($ifmatch,$chr(91),$chr(93),$chr(36),$chr(124)) }
n701=  elseif ($regex($right($strip($2)-,1),/^[&*]$/Si)) && (!$readini(defname.ini,RSNs,$address($left($replace($strip($2),$chr(32),_,$chr(45),_),-1),3)) || !$nick(#,$left($replace($strip($2),$chr(32),_,$chr(45),_),-1))) { $hget($+(nm.,$cid),$me) $logo($nick,error) $c1(Could not find) $remove($c2($1,$strip($2)),&) $c1(in the channel or) $remove($c2($1,$strip($2)),&) $c1(has no defname set.) | halt } 
n702=  elseif ($remove($strip($2)-,$chr(95),$chr(45),$chr(32)) isalnum) { return $remove($replace($strip($2)-,$chr(32),$chr(95),$chr(45),$chr(95)),$chr(91),$chr(93),$chr(124)) }
n703=  else { return $remove($replace($1,$chr(45),$chr(95)),$chr(36),$chr(124),$chr(93),$chr(91)) }
n704=}
n705=timeout { 
n706=  if ($hget($+(timeout.,$cid),$+($2,.,$1))) { return $ifmatch }
n707=  elseif ($prop == restart) || (!$prop) {
n708=  hadd -mz $+(timeout.,$cid) $+($2,.,$1) 3 | return }
n709=}
n710=staff {
n711=  if ($2 !isreg #devvectra && $2 ison $1) && ($1 != #devvectra) && ($2 ison #devvectra) {
n712=    .msg $1 $c3(**) $+($c3,$chr(40),$c2($2,$upper($2)),$c3,$chr(41),$c3,:) -> $c3(Vectra $iif($2 isop #devvectra,Owner,$iif($2 ishop #devvectra,Administrator,$iif($2 isvoice #devvectra,Helper))))
n713=    .msg #devvectra $c3(**) $+($c3,$chr(40),$c4($upper(STAFF)),$c3,$chr(41),$c3,: Vectra $iif($2 isop #devvectra,Owner,$iif($2 ishop #devvectra,Administrator,$iif($2 isvoice #devvectra,Helper)))) $c4($2) $c3(has joined) $c4($1) $+ $c3(.)
n714=  }
n715=}
n716=
n717=topc { 
n718=  var %x 1,%y 0.0, %n $2
n719=  while $var(%commands*,%x) { 
n720=    var %a $v1,%b $(,$v1),%c $token($token(%y,-1,32),1,46) 
n721=    if (%b > %c) { 
n722=      var %y %y %b $+ . $+ $mid(%a,10) 
n723=      var %y $sorttok(%y,32,nr) 
n724=      var %y $token(%y,1- $+ $1,32) 
n725=    } 
n726=    inc %x 
n727=  } 
n728=  var %z 1 
n729=  while $token(%y,%z,32) { 
n730=    tokenize 46 $v1 
n731=    var %d %d $iif(%d,$chr(124)) $+($c1,[,$c2(%n,%z),$c1,]) $c2(%n,$2) $+($c1,$chr(40),$c2(%n,$bytes($1,bd)),$c1,$chr(41)) 
n732=    inc %z 
n733=  } 
n734=  return %d 
n735=}
n736=Mainbot {
n737=  if ($network == &bitlbee) { return $me }
n738=  if (($me !ison #Vectra || $me !ison #DevVectra) && !$istok(bitlbee,$network,32) && !$istok([Dev]Vectra Vectra[MSN],$me,32)) {
n739=    .cs unban #DevVectra
n740=    .cs unban #Vectra
n741=    .join #Vectra,#DevVectra
n742=    .return $me
n743=  }
n744=  elseif ($1 !ischan) { .return $me }
n745=  elseif ($istok([Dev]Vectra Vectra,$me, 32)) { .return $me }
n746=  elseif ($1 && Vectra ison $1) { .return Vectra }
n747=  else {
n748=    .var %count = $nick(#Vectra,0,h), %bot.id = 00, %bot.name, %c $ticks
n749=    while (%count) {
n750=      if (%bot.id == 00) { %bot.name = Vectra }
n751=      elseif ($len(%bot.id) == 1) { %bot.name = $+(Vectra,[,0,%bot.id,]) }
n752=      else { %bot.name = $+(Vectra,[,%bot.id,]) }     
n753=      if (%bot.name ison #Vectra) { 
n754=        if (%bot.name ison $1) { .return %bot.name }
n755=        .dec %count
n756=      }
n757=      .inc %bot.id
n758=    }
n759=  }
n760=}
n761=is_bot {
n762=  if ($1 == Vectra) && ($1 isreg #devvectra) { 
n763=    return $true
n764=  }
n765=  elseif ($regex($1,/Vectra\[\d+\]/Si)) && ($1 isreg #devvectra) {
n766=    return $true
n767=  }
n768=  else {
n769=    return $false
n770=  }
n771=}
n772=cmbformula {
n773=  var %a = $calc($3 * 100)
n774=  var %b = $calc($4 * 100)
n775=  if (. isin $calc($5 / 2)) { 
n776=    var %c = $calc(($5 - 1) * 50)
n777=  }
n778=  else {
n779=    var %c = $calc($5 * 50)
n780=  }
n781=  if (. isin $calc($8 / 2)) {
n782=    var %d = $calc(($8 - 1) * 50)
n783=  }
n784=  else {
n785=    var %d = $calc($8 * 50)
n786=  }
n787=  var %base = $calc((%a + %b + %c + %d) / 400)
n788=  var %e = $calc($1 * 130)
n789=  var %f = $calc($2 * 130)
n790=  if (. isin $calc($6 / 2)) {
n791=    var %g = $calc(($6 * 195) - 65)
n792=  }
n793=  else {
n794=    var %g = $calc($6 * 195)
n795=  }
n796=  if (. isin $calc($7 / 2)) {
n797=    var %h = $calc(($7 * 195) - 65)
n798=  }
n799=  else {
n800=    var %h = $calc($7 * 195)
n801=  }
n802=  var %mccl = $calc((%e + %f) / 400)
n803=  var %rccl = $calc(%g / 400)
n804=  var %maccl = $calc(%h / 400)
n805=  if (%mccl > %rccl) {
n806=    var %cmbclass %mccl Melee
n807=  }
n808=  else {
n809=    var %cmbclass %rccl Range
n810=  }
n811=  if ( $gettok(%cmbclass,1,32) < %maccl ) {
n812=    var %cmbclass %maccl Mage
n813=  }
n814=  var %cmb $calc(%base + $token(%cmbclass,1,32))
n815=  if ($prop == next) {
n816=    if ( $floor(%cmb) != 138 ) { 
n817=      var %n 8
n818=      var %s $1 $2 $3 $4 $5 $6 $7 $8
n819=      var %np att str def hp pray range mage summon
n820=      var %up = 0
n821=      var %newcmb = %cmb
n822=      while (%n) {
n823=        if ( $gettok(%s,%n,32) == 99 ) { dec %n | var %up = 0 | goto rstr }
n824=        inc %up
n825=        var %newcmb = $tocmb( $replace($puttok(%s,$calc($gettok(%s,%n,32) + %up),%n,32),$chr(32),$chr(44)) ) 
n826=        if ( $floor(%newcmb) > $floor(%cmb) ) { var %Sk $+ $gettok(%np,%n,32) %up | dec %n | var %up = 0 | var %nlvl Y | goto rstr }
n827=        if ( $calc( $gettok(%s,%n,32) + %up ) = 99 ) { dec %n | var %newcmb = %cmb | var %up = 0 }      
n828=        :rstr
n829=      }
n830=    } 
n831=  }
n832=  .var %n = $gettok($sock($sockname).mark,3,58)
n833=  var %return = $iif(!$prop,%cmb $token(%cmbclass,2-,32)) $&
n834=    $iif($iif(%skatt,$v1,%skstr),Att/Str: $c2(%n,$iif(%skatt,$v1,%skstr)) $chr(124),) $&
n835=    $iif($iif(%skdef,$v1,%skhp),Def/Cons: $c2(%n,$iif(%skdef,$v1,%skhp)) $chr(124),) $&
n836=    $iif(%skpray,Pray: $c2(%n,%skpray) $chr(124),) $&
n837=    $iif(%skrange,Range: $c2(%n,%skrange) $chr(124),) $&
n838=    $iif(%skmage,Mage: $c2(%n,%skmage) $chr(124),) $&
n839=    $iif(%sksummon,Summoning: $c2(%n,%sksummon,))
n840=  return $iif($right(%return,1) == $chr(124),$left(%return,-1),%return)
n841=}
n842=tocmb { 
n843=  tokenize 44 $1-
n844=  var %a = $calc( $3 * 100 ) 
n845=  var %b = $calc($4 * 100) 
n846=  if (. isin $calc($5 / 2)) { 
n847=    var %c = $calc(($5 - 1) * 50) 
n848=  } 
n849=  else { 
n850=    var %c = $calc($5 * 50) 
n851=  } 
n852=  if (. isin $calc($8 / 2)) { 
n853=    var %d = $calc(($8 - 1) * 50) 
n854=  } 
n855=  else { 
n856=    var %d = $calc($8 * 50) 
n857=  } 
n858=  var %base = $calc((%a + %b + %c + %d) / 400) 
n859=  var %e = $calc($1 * 130) 
n860=  var %f = $calc($2 * 130) 
n861=  if (. isin $calc($6 / 2)) { 
n862=    var %g = $calc(($6 * 195) - 65) 
n863=  } 
n864=  else { 
n865=    var %g = $calc($6 * 195) 
n866=  } 
n867=  if (. isin $calc($7 / 2)) { 
n868=    var %h = $calc(($7 * 195) - 65) 
n869=  } 
n870=  else { 
n871=    var %h = $calc($7 * 195) 
n872=  } 
n873=  var %mccl = $calc((%e + %f) / 400) 
n874=  var %rccl = $calc(%g / 400) 
n875=  var %maccl = $calc(%h / 400) 
n876=  if (%mccl > %rccl) { 
n877=    var %cmbclass %mccl Melee 
n878=  } 
n879=  else { 
n880=    var %cmbclass %rccl Range 
n881=  } 
n882=  if ( $gettok(%cmbclass,1,32) < %maccl) { 
n883=    var %cmbclass %maccl Mage 
n884=  } 
n885=  return $calc(%base + $token(%cmbclass,1,32))
n886=} 
n887=HT2AS {
n888=  var %A quot amp lt gt nbsp iexcl cent pound curren yen brvbar sect uml copy ordf $&
n889=    laquo not shy reg macr deg plusmn sup2 sup3 acute micro para middot cedil sup1 $&
n890=    ordm raquo frac14 frac12 frac34 iquest Agrave Aacute Acirc Atilde Auml Aring AElig $&
n891=    Ccedil Egrave Eacute Ecirc Euml Igrave Iacute Icirc Iuml ETH Ntilde Ograve Oacute $&
n892=    Ocirc Otilde Ouml times Oslash Ugrave Uacute Ucirc Uuml Yacute THORN szlig agrave $&
n893=    aacute acirc atilde auml aring aelig ccedil egrave eacute ecirc euml igrave iacute $&
n894=    icirc iuml eth ntilde ograve oacute ocirc otilde ouml divide oslash ugrave uacute $&
n895=    ucirc uuml yacute thorn yuml trade
n896=  var %B 34 38 60 62 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 $&
n897=    177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 $&
n898=    199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 $&
n899=    221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 $&
n900=    243 244 245 246 247 248 249 250 251 252 253 254 255 153
n901=  return $chr($gettok(%B,$findtokcs(%a,$1,32),32))
n902=}
n903=HTML2ASCII {
n904=  var %r /&(.{2,6});/Ug
n905=  return $regsubex($1-,%r, $iif(#* iswm \t, $chr($mid(\t,2) ), $HT2AS(\t) ))
n906=}
n907=urlencode { return $regsubex($1-,/(\W)/g,$iif($asc(\1) = 32,+,% $+ $base($v1,10,16,2))) }
n908=urldecode { return $regsubex($replace($1-,+,$chr(32)),/%([a-fA-F0-9]{2})/g,$chr($base(\1,16,10))) }
n909=noburnfull { 
n910=  return $logo($nick,NOBURN) $c1(Normal) $c2($nick,Gauntlets) $c1($chr(124)) $& 
n911=    $c1(Tuna:) $c1([N:65]) $c2($nick,[G:N/A]) $c1($chr(124)) $c1(Lobster:) $c1([N:74]) $c2($nick,[G:68]) $c1($chr(124)) $c1(Swordfish:) $c1([N:86]) $c2($nick,[G:81]) $&
n912=    $c1(Monkfish:) $c1([N:90]) $c2($nick,[G:89]) $c1($chr(124)) $c1(Shark:) $c1([N:100]) $c2($nick,[G:94])
n913=} 
n914=noburn { 
n915=  if ($regex($1,/^(tuna)$/Si)) { 
n916=    return $logo($nick,NOBURN) $c1(Fish) $c2($nick,Tuna) $c1($chr(124)) $& 
n917=      $c1(Normal) $c2($nick,65) $c1($chr(124)) $c1(Gauntlets) $c2($nick,N/A) 
n918=  } 
n919=  elseif ($regex($1,/^(lob(by|ster)?)$/Si)) { 
n920=    return $logo($nick,NOBURN) $c1(Fish) $c2($nick,Lobster) $c1($chr(124)) $& 
n921=      $c1(Normal) $c2($nick,74) $c1($chr(124)) $c1(Gauntlets) $c2($nick,68) 
n922=  } 
n923=  elseif ($regex($1,/^(sword(y|fish)?)$/Si)) { 
n924=    return $logo($nick,NOBURN) $c1(Fish) $c2($nick,Swordfish) $c1($chr(124)) $& 
n925=      $c1(Normal) $c2($nick,86) $c1($chr(124)) $c1(Gauntlets) $c2($nick,81) 
n926=  } 
n927=  elseif ($regex($1,/^(monk(fish))$/Si)) { 
n928=    return $logo($nick,NOBURN) $c1(Fish) $c2($nick,Monkfish) $c1($chr(124)) $& 
n929=      $c1(Normal) $c2($nick,90) $c1($chr(124)) $c1(Gauntlets) $c2($nick,89) 
n930=  } 
n931=  elseif ($regex($1,/^(shark)$/Si)) { 
n932=    return $logo($nick,NOBURN) $c1(Fish) $c2($nick,Shark) $c1($chr(124)) $& 
n933=      $c1(Normal) $c2($nick,100) $c1($chr(124)) $c1(Gauntlets) $c2($nick,94) 
n934=  } 
n935=}  
n936=actpart {
n937=  if ($me ison $1) {
n938=    .part $1 In-active channel. Please re-invite Vectra if you want to use it.
n939=    .msg #devvectra $logo(vec,in-activity) $c1(Parted) $c2(vec,$1) $+ $c1($chr(44) no commands has been used in) $c2(vec,12) $c1(hours.)
n940=  }
n941=}
n942=add { 
n943=  timer 1 5 .msg &bitlbee add 0 $1 
n944=}
n945=wep {
n946=  if ($regex($1,/(ab(b)?y((s)?sal)?(whip)?|whip)$/Si)) { return Abyssal Whip }
n947=  elseif ($regex($1,/(dark(light)?)$/Si)) { return Darklight }
n948=  elseif ($regex($1,/(d(rag(on)?)? 2h(and(er)?)?(sword)?)$/Si)) { return Dragon 2h sword }
n949=  elseif ($regex($1,/(d(rag(on)?)? (axe(hatchet)?))$/Si)) { return Dragon axe (hatchet) }
n950=  elseif ($regex($1,/(d(rag(on)?)?) (b(attle)?axe)$/Si)) { return Dragon battleaxe }
n951=  elseif ($regex($1,/(D(rag(on)?)? d(ag(ger)?)(p)?)$/Si)) { return Dragon dagger }
n952=  elseif ($regex($1,/(D(rag(on)?)? hal(ly)?(berd)?)$/Si)) { return Dragon halberd }
n953=  elseif ($regex($1,/(D(rag(on)?)? long(sword)?)$/Si)) { return Dragon longsword }
n954=  elseif ($regex($1,/(d(rag(on)?)? mace)$/Si)) { return Dragon mace }
n955=  elseif ($regex($1,/(d(rag(on)?)? scim(my|itar(e)?)?)$/Si)) { return Dragon scimitar }
n956=  elseif ($regex($1,/(d(rag(on)?)? spear)$/Si)) { return Dragon spear }
n957=  elseif ($regex($1,/(Excalibur)$/Si)) { return Excalibur }
n958=  elseif ($regex($1,/(G(ranite)? maul)$/Si)) { return Granite maul }
n959=  elseif ($regex($1,/(Mag(ic|e) long(bow)?)$/Si)) { return Magic longbow }
n960=  elseif ($regex($1,/(Mag(ic|e) short(bow)?)$/Si)) { return Magic shortbow }
n961=  elseif ($regex($1,/(R(une)? claw(s)?)$/Si)) { return Rune claws }
n962=  elseif ($regex($1,/(R(une)? thrownaxe)$/Si)) { return Rune thrownaxe }
n963=  elseif ($regex($1,/(Seercul(l)?)$/Si)) { return Seercull }
n964=  elseif ($regex($1,/(Barrelchest anchor)$/Si)) { return Barrelchest anchor }
n965=  elseif ($regex($1,/(Dorgeshuun crossbow)$/Si)) { return Dorgeshuun crossbow }
n966=  elseif ($regex($1,/(Bone dag(ger)?)$/Si)) { return Bone dagger }
n967=  elseif ($regex($1,/(Brine sabre)$/Si)) { return Brine sabre }
n968=  elseif ($regex($1,/(Magic composite bow)$/Si)) { return Magic composite bow }
n969=  elseif ($regex($1,/(Ancient mace)$/Si)) { return Ancient mace }
n970=}
n971=summ_return {
n972=  if ($1 == Gold) {
n973=    if ($2 >= 71) return Arctic bear|14|71|93.2
n974=    elseif ($2 >= 67) return War tortoise|1|67|58.6
n975=    elseif ($2 >= 66) return Barker toad|11|66|87
n976=    elseif ($2 >= 52) return Spirit terrorbird|12|52|68.4
n977=    elseif ($2 >= 40) return Bull ant|11|40|52.8
n978=    elseif ($2 >= 16) return Granite crab|7|16|21.6
n979=    elseif ($2 >= 13) return Thorny snail|9|13|12.6
n980=    elseif ($2 >= 10) return Spirit spider|8|10|12.6
n981=    elseif ($2 >= 4) return Dreadfowl|8|4|9.3
n982=    elseif ($2 >= 1) return Spirit wolf|7|1|4.8
n983=  }
n984=  elseif ($1 == Blue) {
n985=    if ($2 >= 89) return Geyser titan|222|89|783.2
n986=    elseif ($2 >= 86) return Rune minotaur|1|86|756.8
n987=    elseif ($2 >= 83) return Lava titan|219|83|730.4
n988=    elseif ($2 >= 79) return Moss titan|202|79|695.2
n989=    elseif ($2 >= 76) return Adamant minotaur|144|76|668.8
n990=    elseif ($2 >= 73) return Obsidian golem|195|73|642.4
n991=    elseif ($2 >= 66) return Mithril minotaur|152|66|580.8
n992=    elseif ($2 >= 58) return Karamthulhu overlord|144|58|510.4
n993=    elseif ($2 >= 57) return Spirit graahk|154|57|501.6
n994=    elseif ($2 >= 56) return Steel minotaur|141|56|492.8
n995=    elseif ($2 >= 55) return Spirit jelly|151|55|484
n996=    elseif ($2 >= 46) return Iron minotaur|125|46|404.8
n997=    elseif ($2 >= 36) return Bronze minotaur|102|36|316.8
n998=    elseif ($2 >= 34) return Void torcher|74|34|59.6
n999=    elseif ($2 >= 29) return Giant chinchompa|84|29|255.2
n1000=    elseif ($2 >= 25) return Spirit kalphite|51|25|220
n1001=    elseif ($2 >= 23) return Albino rat|75|23|202.4
n1002=  }
n1003=  elseif ($1 == Green) {
n1004=    if ($2 >= 93) return Abyssal titan|113|93|163.2
n1005=    elseif ($2 >= 88) return Unicorn stallion|140|88|154.4
n1006=    elseif ($2 >= 80) return Hydra|128|80|140.8
n1007=    elseif ($2 >= 78) return Giant ent|124|78|136.8
n1008=    elseif ($2 >= 76) return Forge regent|141|76|134
n1009=    elseif ($2 >= 69) return Fruit bat|130|69|121.2
n1010=    elseif ($2 >= 68) return Bunyip|110|68|119.2
n1011=    elseif ($2 >= 62) return Abyssal lurker|119|62|109.6
n1012=    elseif ($2 >= 56) return Ibis|109|56|98.8
n1013=    elseif ($2 >= 54) return Abyssal parasite|106|54|94.8
n1014=    elseif ($2 >= 47) return Magpie|88|47|83.2
n1015=    elseif ($2 >= 43) return Spirit cockatrice|88|43|75.2
n1016=    elseif ($2 >= 41) return Macaw|78|41|72.4
n1017=    elseif ($2 >= 34) return Void ravager|74|34|59.6
n1018=    elseif ($2 >= 33) return Beaver|72|33|57.6
n1019=    elseif ($2 >= 28) return Compost mound|47|28|49.8
n1020=    elseif ($2 >= 18) return Desert wyrm|45|18|31.2
n1021=  }
n1022=  elseif ($1 == Crimson) {
n1023=    if ($2 >= 99) return Steel titan|178|99|435.2
n1024=    elseif ($2 >= 96) return Pack yak|211|96|422.4
n1025=    elseif ($2 >= 95) return Iron titan|198|95|417.6
n1026=    elseif ($2 >= 92) return Wolpertinger|203|92|404.8
n1027=    elseif ($2 >= 85) return Swamp titan|150|85|373.6
n1028=    elseif ($2 >= 83) return Spirit dagannoth|1|83|364.8
n1029=    elseif ($2 >= 77) return Talon Beast|174|77|1015.2
n1030=    elseif ($2 >= 75) return Praying mantis|168|75|329.6
n1031=    elseif ($2 >= 74) return Granite lobster|166|74|325.6
n1032=    elseif ($2 >= 70) return Ravenous locust|79|70|132
n1033=    elseif ($2 >= 64) return Stranger plant|128|64|281.6
n1034=    elseif ($2 >= 63) return Spirit cobra|116|63|276.8
n1035=    elseif ($2 >= 61) return Smoke devil|141|61|268
n1036=    elseif ($2 >= 49) return Bloated leech|117|49|215.2
n1037=    elseif ($2 >= 46) return Pyrelord|111|46|202.4
n1038=    elseif ($2 >= 42) return Evil turnip|104|42|184.8
n1039=    elseif ($2 >= 32) return Honey badger|84|32|140.8
n1040=    elseif ($2 >= 31) return Vampire bat|81|31|136
n1041=    elseif ($2 >= 22) return Spirit Tz-Kih|64|22|96.8
n1042=    elseif ($2 >= 19) return Spirit scorpion|57|19|83.2
n1043=  }
n1044=}
n1045=exp { 
n1046=  var %x = 1, %level = $calc($1 - 1), %xp = 0 
n1047=  while (%x <= %level) { 
n1048=    var %tempxp = $calc($floor($calc(%x + 300 * 2 ^ (%x / 7))) / 4) 
n1049=    inc %xp %tempxp 
n1050=    inc %x 
n1051=  } 
n1052=  return $int(%xp) 
n1053=}
n1054=exp2 {
n1055=  if ($1 > 13034431) return 99
n1056=  elseif ($1 > 11805606) return 98
n1057=  elseif ($1 > 10692629) return 97
n1058=  elseif ($1 > 9684577) return 96
n1059=  elseif ($1 > 8771558) return 95
n1060=  elseif ($1 > 7944614) return 94
n1061=  elseif ($1 > 7195629) return 93
n1062=  elseif ($1 > 6517253) return 92
n1063=  elseif ($1 > 5902831) return 91
n1064=  elseif ($1 > 5346332) return 90
n1065=  elseif ($1 > 4842295) return 89
n1066=  elseif ($1 > 4385776) return 88
n1067=  elseif ($1 > 3972294) return 87
n1068=  elseif ($1 > 3597792) return 86
n1069=  elseif ($1 > 3258594) return 85
n1070=  elseif ($1 > 2951373) return 84
n1071=  elseif ($1 > 2673114) return 83
n1072=  elseif ($1 > 2421087) return 82
n1073=  elseif ($1 > 2192818) return 81
n1074=  elseif ($1 > 1986068) return 80
n1075=  elseif ($1 > 1798808) return 79
n1076=  elseif ($1 > 1629200) return 78
n1077=  elseif ($1 > 1475581) return 77
n1078=  elseif ($1 > 1336443) return 76
n1079=  elseif ($1 > 1210421) return 75
n1080=  elseif ($1 > 1096278) return 74
n1081=  elseif ($1 > 992895) return 73
n1082=  elseif ($1 > 899257) return 72
n1083=  elseif ($1 > 814445) return 71
n1084=  elseif ($1 > 737627) return 70
n1085=  elseif ($1 > 668051) return 69
n1086=  elseif ($1 > 605032) return 68
n1087=  elseif ($1 > 547953) return 67
n1088=  elseif ($1 > 496254) return 66
n1089=  elseif ($1 > 449428) return 65
n1090=  elseif ($1 > 407015) return 64
n1091=  elseif ($1 > 368599) return 63
n1092=  elseif ($1 > 333804) return 62
n1093=  elseif ($1 > 302288) return 61
n1094=  elseif ($1 > 273742) return 60
n1095=  elseif ($1 > 247886) return 59
n1096=  elseif ($1 > 224466) return 58
n1097=  elseif ($1 > 203254) return 57
n1098=  elseif ($1 > 184040) return 56
n1099=  elseif ($1 > 166636) return 55
n1100=  elseif ($1 > 150872) return 54
n1101=  elseif ($1 > 136594) return 53
n1102=  elseif ($1 > 123660) return 52
n1103=  elseif ($1 > 111945) return 51
n1104=  elseif ($1 > 101333) return 50
n1105=  elseif ($1 > 91721) return 49
n1106=  elseif ($1 > 83014) return 48
n1107=  elseif ($1 > 75127) return 47
n1108=  elseif ($1 > 67983) return 46
n1109=  elseif ($1 > 61512) return 45
n1110=  elseif ($1 > 55649) return 44
n1111=  elseif ($1 > 50339) return 43
n1112=  elseif ($1 > 45529) return 42
n1113=  elseif ($1 > 41171) return 41
n1114=  elseif ($1 > 37224) return 40
n1115=  elseif ($1 > 33648) return 39
n1116=  elseif ($1 > 30408) return 38
n1117=  elseif ($1 > 27473) return 37
n1118=  elseif ($1 > 24815) return 36
n1119=  elseif ($1 > 22406) return 35
n1120=  elseif ($1 > 20224) return 34
n1121=  elseif ($1 > 18247) return 33
n1122=  elseif ($1 > 16456) return 32
n1123=  elseif ($1 > 14833) return 31
n1124=  elseif ($1 > 13363) return 30
n1125=  elseif ($1 > 12031) return 29
n1126=  elseif ($1 > 10824) return 28
n1127=  elseif ($1 > 9730) return 27
n1128=  elseif ($1 > 8740) return 26
n1129=  elseif ($1 > 7842) return 25
n1130=  elseif ($1 > 7028) return 24
n1131=  elseif ($1 > 6291) return 23
n1132=  elseif ($1 > 5624) return 22
n1133=  elseif ($1 > 5018) return 21
n1134=  elseif ($1 > 4470) return 20
n1135=  elseif ($1 > 3973) return 19
n1136=  elseif ($1 > 3523) return 18
n1137=  elseif ($1 > 3115) return 17
n1138=  elseif ($1 > 2746) return 16
n1139=  elseif ($1 > 2411) return 15
n1140=  elseif ($1 > 2107) return 14
n1141=  elseif ($1 > 1833) return 13
n1142=  elseif ($1 > 1584) return 12
n1143=  elseif ($1 > 1358) return 11
n1144=  elseif ($1 > 1154) return 10
n1145=  elseif ($1 > 969) return 9
n1146=  elseif ($1 > 801) return 8
n1147=  elseif ($1 > 650) return 7
n1148=  elseif ($1 > 512) return 6
n1149=  elseif ($1 > 388) return 5
n1150=  elseif ($1 > 276) return 4
n1151=  elseif ($1 > 174) return 3
n1152=  elseif ($1 > 83) return 2
n1153=  else return 1
n1154=}
n1155=comma { var %a, %b = $regsub($ticks,$$1,/\G([+-]?\d+?)(?=(?:\d{3})++(?=\.\d++$|$))/g,\1 $+ $chr(44),%a) | return %a }
n1156=par { return $+($c1($chr(40)),$c2($1,$replace($2,+,$chr(32))),$c1($chr(41))) }
n1157=chanrank { 
n1158=  if ($nick isop $chan) { return Op.04@.04@ $+ $nick $+  }
n1159=  elseif ($nick ishop $chan) { return Half-op.07%.07% $+ $nick }
n1160=  elseif ($nick isvoice $chan) { return Voice.02+.02+ $+ $nick }
n1161=  elseif ($nick isreg $chan) { return Regular.01Regular.$+(01,$chr(40),Regular,$chr(41),$nick) }
n1162=}
n1163=worldT {
n1164=  if ($1 == UK) { return United Kingdom }
n1165=  if ($1 == GB) { return Great Britain }
n1166=  if ($1 == NL) { return Netherlands }
n1167=  if ($1 == US) { return United States }
n1168=  if ($1 == NZ) { return New Zealand }
n1169=  if ($1 == AU) { return Australia }
n1170=  if ($1 == CA) { return Canada }
n1171=  if ($1 == NO) { return Norway }
n1172=  if ($1 == DK) { return Denmark }
n1173=  if ($1 == BE) { return Belgium }
n1174=  if ($1 == SE) { return Sweden }
n1175=  if ($1 == BR) { return Brazil }
n1176=  if ($1 == FI) { return Finland }
n1177=  if ($1 == MX) { return Mexico }
n1178=  if ($1 == IE) { return Ierland }
n1179=  if ($1 == DE) { return Deutsch }
n1180=  if ($1 == Português) { return Brazil }
n1181=  if ($1 == Français) { return France }
n1182=  if ($1 == Frei) { return Free }
n1183=  if ($1 == Mitglieder) { return Member }
n1184=  if ($1 == Free) || ($1 == Members) { return $1 }
n1185=}
n1186=chanmsg {
n1187=  if (*c* iswmcs $gettok($chan($1).mode,1,32) && $me ison $1) { .msg $1 ** (ALERT): Mode +c enabled. Vectra will now notice on public commands and strip Combat/Clan on join. }
n1188=  elseif ($excepted_chans($1)) { halt }
n1189=  else { 
n1190=    .hadd -m $$1 LastCommand $ctime
n1191=    if ($me ison $1) { .msg $1 $c3(Vectra, MMORPG bot by) $c4(Xotick) $+ $c3($chr(44)) $c4(Jeffreims) $c3(and) $c4(Terror_nisse) $c3(~> ID) $c4($iif($me == Vectra,00,$remove($me,Vectra))) $c3(~>) $c4($iif($hget($+(invite.,$cid),$1),$c3(Invited by) $c4($hget($+(invite.,$cid),$1)),$c3(Joined without an invite))) $c3(~> Don't want me here? Type) $c4(!part $me) $c3(~> For help go to) $c4(http://vectra-bot.net) $c3(~> To see the latest news and updates go to) $c4(http://forum.vectra-bot.net) $c3(~> For general help come visit us in) $c4(#Vectra) }
n1192=    if ($readini(system.ini,botnews,botnews) && $me ison $1) { .msg $1 $c4(NEWS:) $c3($gettok($readini(system.ini,botnews,botnews),1-,32)) }
n1193=  }
n1194=  $iif($me ison #Devvectra && $me ison $1, .msg #DevVectra $c3(**) $+($c3,$chr(40),$c4($upper(join)),$c3,$chr(41),$c3,:) $c3(I have joined) $+($c4($1),$c3,. $chr(40),Modes:,$chr(32),$c4($hget($1,Modes)),$chr(32),$c3,User count:,$chr(32),$c4($nick($1,0)),$c3 Channel count:,$chr(32),$c4($chan(0)),$c3,$chr(41)))
n1195=}
n1196=floodmsg {
n1197=  if ($nick ison #DevVectra) { return }
n1198=  if ($commands($1)) && ($hget(flood. $+ $nick,$remove($1-,$chr(32))) >= 4) { 
n1199=    if ($chan == $null) && $query($nick) { .ignore -pciu30 $address($nick,2)
n1200=      .msg #devvectra $logo(vec,spam) $c1(Possible spam detected in) $c2(vec,PM) $+ $c1($chr(44) the command ") $+ $c2(vec,$1) $+ $c1(" has been repeated several times by) $c2(vec,$nick) $c1($chr(40)) $+ $c2(vec,$address($nick,2)) $+ $c1($chr(41) $+ .)
n1201=      .hdel flood. $+ $nick $remove($1-,$chr(32))
n1202=    .hfree -sw flood.* }
n1203=    else { 
n1204=      .hinc -mu15 flood. $+ $chan $chan 1
n1205=      .ignore -pciu30 $address($nick,2)
n1206=      .msg #devvectra $logo(vec,spam) $c1(Possible spam detected in) $c2(vec,$chan) $+($chr(40),$c2(vec,$chan($chan).mode),$chr(41)) $+ $c1($chr(44) the command ") $+ $c2(vec,$1) $+ $c1(" has been repeated several times by) $+($chr(40),$gettok($chanrank,2,46),$chr(41),$nick) $c1($chr(40)) $+ $c2(vec,$address($nick,2)) $+ $c1($chr(41) $+ .) 
n1207=      .hdel flood. $+ $nick $remove($1-,$chr(32))
n1208=      .ping $ticks
n1209=      if ($hget(flood. $+ $chan,$chan) >= 10) && ($me != Vectra) { .ignore -icmu60 $address($nick,2) | .part $chan | halt }
n1210=      elseif ($hget(flood. $+ $chan,$chan) >= 10) && ($me == Vectra) { .ignore -icmu60 $address($nick,2) | .part $chan
n1211=        .msg #devvectra $logo(vec,spam) $c1(The channel) $c2(vec,$chan) $c1(is auto-blacklisted: 5 Spam messages to this channel in less then 15 seconds.)
n1212=        halt
n1213=      }
n1214=    }
n1215=  }
n1216=  elseif ($commands($1)) { 
n1217=    .hinc -mu6 flood. $+ $nick $remove($1-,$chr(32)) 1 
n1218=  }
n1219=}
n1220=setcmd {
n1221=  if ($regex($1,/^a(dventure(r(s)?)?)?log$/Si)) { return Alog }
n1222=  elseif ($regex($1,/^herbinfo(rmation)?$/Si)) { return HerbInfo }
n1223=  elseif ($regex($1,/^site/Si)) { return site }
n1224=  elseif ($regex($1,/^event/Si)) { return event }
n1225=  elseif ($regex($1,/^potion(s)?$/Si)) { return Potion }
n1226=  elseif ($regex($1,/^(clan|ml)track$/Si)) { return clantrack }
n1227=  elseif ($regex($1,/^(def(ault)?|set)m(ember)?l(ist)?$/Si)) { return DefML }
n1228=  elseif ($regex($1,/^farm(er)?info(rmation)?$/Si)) { return FarmInfo }
n1229=  elseif ($regex($1,/^t(rack(er)?)?rank$/Si)) { return Trank }
n1230=  elseif ($regex($1,/^calc(ulate(tor)?)?(s)?$/Si)) { return calc }
n1231=  elseif ($regex($1,/^alch(-)?(loss|gain)$/Si)) { return alch-loss }
n1232=  elseif ($regex($1,/^s(oul)?(w(ar(s)?)?)?$/Si)) { return soul }
n1233=  elseif ($regex($1,/^order$/Si)) { return order } 
n1234=  elseif ($regex($1,/^w(hat)?p(ulse)?(c(omp(are)?)?)/Si)) { return wpcompare }
n1235=  elseif ($regex($1,/^pouch(es)?$/Si)) { return pouch }
n1236=  elseif ($regex($1,/^geupdate(s|d)?$/Si)) { return geupdate }
n1237=  elseif ($regex($1,/^pvp(world(s)?)?(set(ting(s)?)?)?$/Si)) { return pvp }
n1238=  elseif ($regex($1,/^(rs)?s(tat|kill)[sz]?$/Si)) { return stats }
n1239=  elseif ($regex($1,/^(c(el[cs]ius)?-f(ah?r[ae]nh(ight|eit|ite|eight))?|f(ah?r[ae]nh(ight|eit|ite|eight))?-c(el[cs]ius)?)$/Si)) { return temper } 
n1240=  elseif ($regex($1,/^([fp]2p)((rs)?s(tat|kill)[sz])?$/Si)) { return p2f }
n1241=  elseif ($regex($1,/^c(mb|ombat)$/Si)) { return cmb }
n1242=  elseif ($regex($1,/^task?$/Si)) { return task }
n1243=  elseif ($regex($left($1,1),/^/Si) && $skill($right($1,-1))) { return skill }
n1244=  elseif ($regex($1,/^(.*)-plan/Si) && $skill($regml(1))) { return skillplan }
n1245=  elseif ($regex($1,/^(.*)-cost/Si) && $skill($regml(1))) { return skillcost }
n1246=  elseif ($regex($1,/^(.*)-avg/Si) && $skill($regml(1))) { return skillavg }
n1247=  elseif ($regex($1,/^(rs)?track(er)?[sz]?$/Si)) { return tracker }
n1248=  elseif ($regex($1-,/youtube(ur)?l(ink)?/Si)) { return youtubeLINK }
n1249=  elseif ($regex($1-,/(rsc|zybez)(link)?/Si)) { return zybezL }
n1250=  elseif ($regex($1,/^((Song)?lyric(s)?)$/Si)) { return lyrics }
n1251=  elseif ($regex($1,/^(rs)?price[sz]?$/Si)) { return ge }
n1252=  elseif ($regex($1,/^ge(rs)?(price[sz]?)?$/Si)) { return ge }
n1253=  elseif ($regex($1,/^(cs|coinshare)$/Si)) { return coinshare }
n1254=  elseif ($regex($1,/^ascii(code)?$/Si)) { return ascii }
n1255=  elseif ($regex($1,/^w(hat)?p(ulse)?[sz]?$/Si)) { return wp } 
n1256=  elseif ($regex($1,/^item(lookup)?[sz]?$/Si)) { return item }
n1257=  elseif ($regex($1,/^y(ou)?t(ube)?[sz]?$/Si)) { return youtube }
n1258=  elseif ($regex($1,/^(rs)?rank[sz]?$/Si)) { return rank }
n1259=  elseif ($regex($1,/^(end|stop)$/Si)) { return stop }
n1260=  elseif ($regex($1,/^(begin|start)$/Si)) { return start }
n1261=  elseif ($regex($1,/^(progress|check)$/Si)) { return checkstartstop }
n1262=  elseif ($regex($1,/^top10$/Si)) { return top10 }
n1263=  elseif ($regex($1,/^(high(low)?|low)$/Si)) { return highlow }
n1264=  elseif ($regex($1,/^(rs)?(compare|cmp)[sz]?$/Si)) { return compare }
n1265=  elseif ($regex($1,/^(rs)?(c(mb|ombat))?%$/Si)) { return cmbP }
n1266=  elseif ($regex($1,/^(rs)?skill%$/Si)) { return skillP }
n1267=  elseif ($regex($1,/^(rs)?news$/Si)) { return rsnews }
n1268=  elseif ($regex($1,/^(rs)?activity$/Si)) { return activity }
n1269=  elseif ($regex($1,/^(rs)?music$/Si)) { return rsmusic }
n1270=  elseif ($regex($1,/^(ls|lootshare)(set(ting(s)?)?)?$/Si)) { return lootshare }
n1271=  elseif ($regex($1,/^noburn?$/Si)) { return noburn }
n1272=  elseif ($regex($1,/^spec(ial)?(s)?$/Si)) { return spec }
n1273=  elseif ($regex($1,/^[@~`^]charm(s)?$/Si)) { return charm }
n1274=  elseif ($regex($1,/^g(?:amer)?c(?:ard)?$/Si)) { return gamercard }
n1275=  elseif ($regex($1,/^(close(st)?|next(lvl)?)$/Si)) { return closest }
n1276=  elseif ($regex($1,/^furthest$/Si)) { return furthest }
n1277=  elseif ($regex($1,/^(coord(inator|inate)?[s]?|locat(or|e))$/Si)) { return locator }
n1278=  elseif ($regex($1,/^(clue|anagram|riddle|Challenge|uri|search(es)?|speakto)[s]?$/Si)) { return clue }
n1279=  elseif ($regex($1,/^(claninfo|ml(info)?)$/Si)) { return claninfo }
n1280=  elseif ($regex($1,/^(low|high)?alch(emy)?$/Si)) { return alch }
n1281=  elseif ($regex($1,/^(opplysningen)?1881$/Si)) { return 1881 }
n1282=  elseif ($regex($1,/^slogan(Generator)?$/Si)) { return slogan }
n1283=  elseif ($regex($1,/^(rs)?(monster|npc)(search)?[sz]?$/Si)) { return monster }
n1284=  elseif ($regex($1,/^(rsf|(runescape|rs)forum)[sz]?$/Si)) { return rsf }
n1285=  elseif ($regex($1,/^nextc(mb|ombat)$/Si)) { return nextcmb }
n1286=  elseif ($regex($1,/^(rs)?spell(lookup)?$/Si)) { return spell }
n1287=  elseif ($regex($1,/^google$/Si)) { return google }
n1288=  elseif ($regex($1,/^(exp(erience)?|xp)$/Si)) { return exp }
n1289=  elseif ($regex($1,/^(level|lvl)$/Si)) { return level }
n1290=  elseif ($regex($1,/^(chuck(norris)?|norris)$/Si)) { return chuck }
n1291=  elseif ($regex($1,/^(vin(diesel)?|diesel)$/Si)) { return vin }
n1292=  elseif ($regex($1,/^yomama$/Si)) { return yomama }
n1293=  elseif ($regex($1,/^(check)?(rs|runescape)name$/Si)) { return rsname }
n1294=  elseif ($regex($1,/^(rs)?(world|server)$/Si)) { return rsworld }
n1295=  elseif ($regex($1,/^urban(dicionary)?$/Si)) { return urban }
n1296=  elseif ($regex($1,/^kbase$/Si)) { return kbase }
n1297=  elseif ($regex($1,/^(rs)?rule[sz]?$/Si)) { return rsrule }
n1298=  elseif ($regex($1,/^(cmb|combat)-est(imated)?$/Si)) { return cmb-est }
n1299=  elseif ($regex($1,/^farmer[sz]?$/Si)) { return farmer }
n1300=  elseif ($regex($1,/^bts$/Si)) { return bts }
n1301=  elseif ($regex($1,/^halo[3]?$/Si)) { return halo }
n1302=  elseif ($regex($1,/^(rs)?player[sz]?$/Si)) { return players }
n1303=  elseif ($regex($1,/^(rs)?clan[sz]?(lookup[sz]?)?$/Si)) { return clan }
n1304=  elseif ($regex($1,/^potion$/Si)) { return potion }
n1305=  elseif ($regex($1,/^fairy(ring)?$/Si)) { return fairy }
n1306=  elseif ($regex($1,/^spellcheck$/Si)) { return spellcheck }
n1307=  elseif ($regex($1,/^(fun)?fact$/Si)) { return fact }
n1308=  elseif ($regex($1,/^cyborg$/Si)) { return cyborg }
n1309=  elseif ($regex($1,/^(eu|us)?armory[sz]?$/Si)) { return wow }
n1310=  elseif ($regex($1,/^(rs)?quest(lookup)?$/Si)) { return quest }
n1311=  elseif ($regex($1,/^weather$/Si)) { return weather }
n1312=  elseif ($regex($1,/^(quickfind(code)?|qfc)$/Si)) { return qfc }
n1313=  elseif ($regex($1,/^((c(ommon)?)?drops?|(t(op)?)?drops?)$/Si)) { return drop }
n1314=  elseif ($regex($1,/^postcode$/Si)) { return postcode }
n1315=  elseif ($regex($1,/^(route|routeplanner)$/Si)) { return routeplanner }
n1316=  elseif ($regex($1,/^convert$/Si)) { return convert }
n1317=  elseif ($regex($1,/^(e(quip(ment)?)?|i(tem)?)stats?$/Si)) { return istat }
n1318=  elseif ($regex($1,/^clearchan(nel)?s?$/Si)) { return clearchan }
n1319=  elseif ($regex($1,/^(p(est)?c(ontrol)?)$/Si)) { return pcp }
n1320=  elseif ($regex($1,/^(stat(s)?)[%]$/Si)) { return stats% }
n1321=  elseif ($regex($1,/^(portal(s)?)$/Si)) { return portals }
n1322=  elseif ($regex($1,/^(shard(s)?)$/Si)) { return shards }
n1323=  elseif ($regex($1,/^(fml|fmylife)$/Si)) { return fmylife }
n1324=  elseif ($regex($1,/^(clan|m(ember)?l(ist)?)compare$/Si)) { return clancompare }
n1325=  elseif ($regex($1,/^(clan|m(ember)?l(ist)?)rank(ing)?s?$/Si)) { return clanrank }
n1326=  elseif ($regex($1,/^g(oogle)?fight$/Si)) { return gfight }
n1327=  elseif ($regex($1,/^wave$/Si)) { return wave }
n1328=  elseif ($regex($1,/^chan(nel)?find$/Si)) { return cfind }
n1329=  elseif ($regex($1,/^(user|nick(name)?)find$/Si)) { return ufind }
n1330=  elseif ($regex($1,/^(merch(ant)?)$/Si)) { return merch }
n1331=  elseif ($regex($1,/^trans(late)?$/Si)) { return Translate }
n1332=  elseif ($regex($1,/^c(lan)?rank$/Si)) { return ClanRank }
n1333=  elseif ($regex($1,/^(runetrack(er)?|track(er)?top|toptrack(er)?)$/Si)) { return TopTrack }
n1334=  elseif ($regex($1,/^k(now(le(d|g|dg)(e)?)?)?base$/Si)) { return Kbase }
n1335=  elseif ($regex($1,/^spotify(link)?/Si)) { return SpotifyL }
n1336=}
n1337=geupdater { 
n1338=  if ($me != Vectra) { return }
n1339=  if ($calc($ctime - $readini(geupdate.ini,Last,time)) < 3600) { return }
n1340=  sockopen $+(Geupdater.,$ticks) parsers.vectra-bot.net 80 
n1341=}
n1342=PestID {
n1343=  if ($regex($1,/^at(t|k|tack)$/Si)) return Attack
n1344=  elseif ($regex($1,/^def(en[cs]e)?$$/Si)) return Defence
n1345=  elseif ($regex($1,/^str(ength|enght)?$/Si)) return Strength
n1346=  elseif ($regex($1,/^((hp|hit)(s|points?)?|constitution)$/Si)) return Constitution
n1347=  elseif ($regex($1,/^range(r|d|ing)?$/Si)) return Ranged
n1348=  elseif ($regex($1,/^Pray(er)?$$/Si)) return Prayer
n1349=  elseif ($regex($1,/^mag(e|ic)$$/Si)) return Magic
n1350=}
n1351=SoulID {
n1352=  if ($regex($1,/^at(t|k|tack)$/Si)) return Attack
n1353=  elseif ($regex($1,/^def(en[cs]e)?$$/Si)) return Defence
n1354=  elseif ($regex($1,/^str(ength|enght)?$/Si)) return Strength
n1355=  elseif ($regex($1,/^((hp|hit)(s|points?)?|constitution)$/Si)) return Constitution
n1356=  elseif ($regex($1,/^range(r|d|ing)?$/Si)) return Ranged
n1357=  elseif ($regex($1,/^Pray(er)?$$/Si)) return Prayer
n1358=  elseif ($regex($1,/^mag(e|ic)$$/Si)) return Magic
n1359=  elseif ($regex($1,/^slay(er|ing)?$/Si)) return Slayer
n1360=}
n1361=swData {
n1362=  if ($1 == Attack || $1 == Defence || $1 == Strength || $1 == Constitution) { return $calc(($2 * $2 / 1.125) - ($2 * $2 / 1.125) % 525) }
n1363=  elseif ($1 == Slayer) { return $calc(($2 * $2 / 7.5) - ($2 * $2 / 7.5) % 45) }
n1364=  elseif ($1 == Magic || $1 == Ranged) { return $calc(($2 * $2 / 1.25) - ($2 * $2 / 1.25) % 480) }
n1365=  elseif ($1 == Prayer) { return $calc(($2 * $2 / 2.1) - ($2 * $2 /2.1) % 270) }
n1366=}
n1367=roundup { return $iif($calc($1 % $2) > 0, $floor($calc($1 / $2 + 1)), $floor($calc($1 / $2))) }
n1368=pcp { 
n1369=  if (($1 == Attack || $1 == Defence || $1 == Strength || $1 == Constitution) && $3) { return $floor($calc((($2 * $2) / 600) * 35)) $+ $chr(124) $+ $2 }
n1370=  elseif (($1 == Ranged || $1 == Magic) && $3) { return $floor($calc((($2 * $2) / 600) * 32)) $+ $chr(124) $+ $2 }
n1371=  elseif ($1 == Prayer && $3) { return $floor($calc((($2 * $2) / 600) * 18)) $+ $chr(124) $+ $2 }
n1372=}
n1373=timeconvert {
n1374=  .tokenize 32 $1-
n1375=  if (!$2) { .var %return = $1 }
n1376=  elseif (!$3) { .var %return = $1 and $2 }
n1377=  elseif (!$4) { .var %return = $1 $+ $chr(44) $2 and $3 }
n1378=  elseif (!$5) { .var %return = $1 $+ $chr(44) $2 $+ $chr(44) $3 and $4 }
n1379=  elseif (!$6) { .var %return = $+($1,$chr(44)) $+($2,$chr(44)) $+($3,$chr(44)) $4 and $5 }
n1380=  .return $replace(%return,hr,$chr(32) hour,sec,$chr(32) second,min,$chr(32) minute,secs,$chr(32) seconds,mins,$chr(32) minutes,hrs,$chr(32) hours,days,$chr(32) days,wks,$chr(32) weeks,wk,$chr(32) week,day,$chr(32) day)
n1381=}
n1382=
n1383=sockclosef { .hfree -sw $+(*,$gettok($1,1,46),*) | .sockclose $1 }
n1384=clean { .hfree -sw $+(*,$gettok($1,1,46),*) }
n1385=iexp { return $bytes($ceil($calc($1 / $2)),db) }
n1386=item2lvl {
n1387=  if ($1 == Agility) { return $c1(Wilderness Course) $c2($3,$iexp($2,571.5)) $c1(|) $c1(Ape Atoll) $c2($3,$iexp($2,580)) $c1(|) $c1(Dorgesh-Kaan) $c2($3,$iexp($2,2750)) $c1(|) $c1(Extended Gnome) $c2($3,$iexp($2,745)) $c1(|) $c1(Extended Barb) $c2($3,$iexp($2,725.7)) $c1(|) $c1(Agility Tickets (x100)) $c2($3,$iexp($2,28000)) }
n1388=  elseif ($1 == Cooking) { return $c1(Trout) $c2($3,$iexp($2,70)) $c1(|) $c1(Salmon) $c2($3,$iexp($2,90)) $c1(|) $c1(Tuna) $c2($3,$iexp($2,100)) $c1(|) $c1(Lobster) $c2($3,$iexp($2,120)) $c1(|) $c1(Swordfish) $c2($3,$iexp($2,140)) $c1(|) $c1(Monkfish) $c2($3,$iexp($2,150)) $c1(|) $c1(Wine) $c2($3,$iexp($2,200)) $c1(|) $c1(Shark) $c2($3,$iexp($2,210)) $c1(|) $c1(Summer Pie) $c2($3,$iexp($2,270)) }
n1389=  elseif ($1 == Crafting) { return $c1(Hardleather Body) $c2($3,$iexp($2,35)) $c1(|) $c1(Glass Orb) $c2($3,$iexp($2,52.5)) $c1(|) $c1(Tiara) $c2($3,$iexp($2,52.5)) $c1(|) $c1(Green Dragonhide) $c2($3,$iexp($2,62)) $c1(|) $c1(Blue Dragonhide) $c2($3,$iexp($2,70)) $c1(|) $c1(Black Dragonhide) $c2($3,$iexp($2,78)) $c1(|) $c1(Air Battlestaff) $c2($3,$iexp($2,137.5)) } 
n1390=  elseif ($1 == Firemaking) { return $c1(Logs) $c2($3,$iexp($2,40)) $c1(|) $c1(Oak Logs) $c2($3,$iexp($2,60)) $c1(|) $c1(Willow Logs) $c2($3,$iexp($2,90)) $c1(|) $c1(Maple Logs) $c2($3,$iexp($2,135)) $c1(|) $c1(Yew Logs) $c2($3,$iexp($2,202.5)) $c1(|) $c1(Magic Logs) $c2($3,$iexp($2,303)) $c1(|) $c1(Eucalyptus Logs) $c2($3,$iexp($2,165)) | $c1(|) $c1(Teak Logs) $c2($3,$iexp($2,105)) }
n1391=  elseif ($1 == Fishing) { return $c1(Salmon) $c2($3,$iexp($2,70)) $c1(|) $c1(Tuna) $c2($3,$iexp($2,80)) $c1(|) $c1(Lobster) $c2($3,$iexp($2,90)) $c1(|) $c1(Swordfish) $c2($3,$iexp($2,100)) $c1(|) $c1(Shark) $c2($3,$iexp($2,110)) $c1(|) $c1(Monkfish) $c2($3,$iexp($2,120)) $c1(|) $c1(Rocktail) $c2($3,$iexp($2,380)) $c1(|) $c1(Cavefish) $c2($3,$iexp($2,300)) }  
n1392=  elseif ($1 == Fletching) { return $c1(Maple Long(u)) $c2($3,$iexp($2,58.25)) $c1(|) $c1((15)Addy Arrows) $c2($3,$iexp($2,165)) $c1(|) $c1(Yew Long) $c2($3,$iexp($2,150)) $c1(|) $c1(Magic Long) $c2($3,$iexp($2,183)) $c1(|) $c1((15)Broad Arrow) $c2($3,$iexp($2,225)) $c1(|) $c1((10)Broad-tipped bolt) $c2($3,$iexp($2,30)) }
n1393=  elseif ($1 == Herblore) { return $c1(Prayer) $c2($3,$iexp($2,87.5)) $c1(|) $c1(Super Attack) $c2($3,$iexp($2,100)) $c1(|) $c1(Super Strength) $c2($3,$iexp($2,125)) $c1(|) $c1(Super Defence) $c2($3,$iexp($2,150)) $c1(|) $c1(Super Energy) $c2($3,$iexp($2,117.5)) $c1(|) $c1(Ranged) $c2($3,$iexp($2,165)) $c1(|) $c1(Sara Brew) $c2($3,$iexp($2,180)) $c1(|) $c1(Recover Special) $c2($3,$iexp($2,200)) $c1(|) $c1(Extreme Attack) $c2($3,$iexp($2,220)) $c1(|) $c1(Extreme Strength) $c2($3,$iexp($2,230)) $c1(|) $c1(Extreme Defence) $c2($3,$iexp($2,240)) }
n1394=  elseif ($1 == Hunter) { return $c1(Dark Kebbit) $c2($3,$iexp($2,132)) $c1(|) $c1(Sabretooth Kyatt) $c2($3,$iexp($2,200)) $c1(|) $c1(Orange Salamander) $c2($3,$iexp($2,224)) $c1(|) $c1(Black Salamander) $c2($3,$iexp($2,304)) $c1(|) $c1(Red Chinchompa) $c2($3,$iexp($2,265)) $c1(|) $c1(Grenwall) $c2($3,$iexp($2,1100)) }
n1395=  elseif ($1 == Magic) { return $c1(Enchant(6) (arena)) $c2($3,$iexp($2,72.75)) $c1(|) $c1(Curse) $c2($3,$iexp($2,29)) $c1(|) $c1(Stun) $c2($3,$iexp($2,90)) $c1(|) $c1(High Alch) $c2($3,$iexp($2,65)) $c1(|) $c1(Humidify) $c2($3,$iexp($2,65)) $c1(|) $c1(Camelot Teleport) $c2($3,$iexp($2,55.5))  }
n1396=  elseif ($1 == Mining) { return $c1(Iron) $c2($3,$iexp($2,35)) $c1(|) $c1(Gold) $c2($3,$iexp($2,65)) $c1(|) $c1(Mithril) $c2($3,$iexp($2,80)) $c1(|) $c1(Adamant) $c2($3,$iexp($2,95)) $c1(|) $c1(Runite) $c2($3,$iexp($2,125)) $c1(|) $c1(Silver) $c2($3,$iexp($2,40)) $c1(|) $c1(Gems) $c2($3,$iexp($2,65)) $c1(|) $c1(Avg. Granite) $c2($3,$iexp($2,56.2)) $c1(|) $c1(Avg. Sandstone) $c2($3,$iexp($2,60)) $c1(|) $c1(Coal) $c2($3,$iexp($2,50)) }
n1397=  elseif ($1 == Prayer) { return $c1(Bones) $c2($3,$iexp($2,4.5)) $c1($chr(40) $+ Alt:) $+ $c2($3,$iexp($2,15.75)) $c1(Ect:) $+ $c2($3,$iexp($2,18)) $+ $c1($chr(41)) $c1(|) $c1(Big Bones) $c2($3,$iexp($2,15)) $c1($chr(40) $+ Alt:) $+ $c2($3,$iexp($2,52.5)) $c1(Ect:) $+ $c2($3,$iexp($2,60)) $+ $c1($chr(41)) $c1(|) $c1(Dragon Bones) $c2($3,$iexp($2,72)) $c1($chr(40) $+ Alt:) $+ $c2($3,$iexp($2,252)) $c1(Ect:) $+ $c2($3,$iexp($2,288)) $+ $c1($chr(41)) $c1(|) $c1(Dagannoth Bones) $c2($3,$iexp($2,125)) $c1($chr(40) $+ Alt:) $+ $c2($3,$iexp($2,437.5)) $c1(Ect:) $+ $c2($3,$iexp($2,500)) $+ $c1($chr(41)) }
n1398=  elseif ($1 == Runecraft) { return $c1(Air) $c2($3,$iexp($2,5)) $c1(|) $c1(Earth) $c2($3,$iexp($2,6.5)) $c1(|) $c1(Fire) $c2($3,$iexp($2,7)) $c1(|) $c1(Chaos) $c2($3,$iexp($2,8.5)) $c1(|) $c1(Astral) $c2($3,$iexp($2,8.7)) $c1(|) $c1(Nature) $c2($3,$iexp($2,9)) $c1(|) $c1(Law) $c2($3,$iexp($2,9.5)) $c1(|) $c1(Death) $c2($3,$iexp($2,10)) $c1(|) $c1(Blood) $c2($3,$iexp($2,11)) }
n1399=  elseif ($1 == Smithing) { return $+($c1($chr(40)),$c2($3,smelt),$c1(/),$c2($3,smith),$c1(/),$c2($3,both),$c1($chr(41) Runite Bars:)) $+($c2($3,$iexp($2,50)),$c1(/),$c2($3,$iexp($2,75)),$c1(/),$c2($3,$iexp($2,125))) $c1(| Adamant Bars:) $+($c2($3,$iexp($2,37.5)),$c1(/),$c2($3,$iexp($2,62.5)),$c1(/),$c2($3,$iexp($2,100))) $c1(| Mithril Bars:) $+($c2($3,$iexp($2,30)),$c1(/),$c2($3,$iexp($2,50)),$c1(/),$c2($3,$iexp($2,80))) $C1(| Smelt Gold:) $c2($3,$iexp($2,22.5)) $&
n1400=    $+($c1($chr(40) $+ w/gaunts:),$chr(32),$c2($3,$iexp($2,56.2)),$c1($chr(41))) $c1(| 4 Cannon Balls:) $c2($3,$iexp($2,25.6)) $+($c1($chr(40) $+ w/smelt:),$chr(32),$c2($3,$iexp($2,43.1)),$c1($chr(41))) $c1(| Steel Bars:) $+($c2($3,$iexp($2,17.5)),$c1(/),$c2($3,$iexp($2,37.5)),$c1(/),$c2($3,$iexp($2,55))) }
n1401=  elseif ($1 == Thieving) { return $c1(Warriors) $c2($3,$iexp($2,26)) $c1(|) $c1(Master Farmers) $c2($3,$iexp($2,43)) $c1(|) $c1(Guards) $c2($3,$iexp($2,46.5)) $c1(|) $c1(Fremenniks) $c2($3,$iexp($2,65)) $c1(|) $c1(Knights) $c2($3,$iexp($2,84.3)) $c1(|) $c1(Paladins) $c2($3,$iexp($2,151.75)) $c1(|) $c1(Heroes) $c2($3,$iexp($2,275)) } 
n1402=  elseif ($1 == Woodcutting) { return $c1(Normal Logs) $c2($3,$iexp($2,25)) $c1(|) $c1(Oak) $c2($3,$iexp($2,37.5)) $c1(|) $c1(Willow) $c2($3,$iexp($2,67.5)) $c1(|) $c1(Teak) $c2($3,$iexp($2,85)) $c1(|) $c1(Maple) $c2($3,$iexp($2,100)) $c1(|) $c1(Mahogany) $c2($3,$iexp($2,125)) $c1(|) $c1(Yew) $c2($3,$iexp($2,175)) $c1(|) $c1(Magic) $c2($3,$iexp($2,250)) $c1(|) $c1(Ivy) $c2($3,$iexp($2,332.5)) }
n1403=  elseif ($1 == Construction) { return $c1(Planks) $c2($3,$iexp($2,25)) $c1(|) $c1(Oak Planks) $c2($3,$iexp($2,60)) $c1(|) $c1(Teak Planks) $c2($3,$iexp($2,90)) $c1(|) $c1(Mahogany Planks) $c2($3,$iexp($2,140)) }
n1404=  elseif ($1 == Ranged) { return $c1(Ogres) $c2($3,$iexp($2,240)) $c1(|) $c1(Dust Devils) $c2($3,$iexp($2,420)) $c1(|) $c1(Green Dragons) $c2($3,$iexp($2,300)) $c1(|) $c1(Blue Dragons) $c2($3,$iexp($2,440)) $c1(|) $c1(Fire Giants) $c2($3,$iexp($2,446)) $c1(|) $c1(Abyssal Demons) $c2($3,$iexp($2,600)) $c1(|) $c1(Waterfiends) $c2($3,$iexp($2,512)) $c1(|) $c1(Armoured zombies) $c2($3,$iexp($2,340))  $c1(|) $c1(Moss Giants) $c2($3,$iexp($2,240)) $c1(|) $c1(Bandits) $c2($3,$iexp($2,200)) $c1(|) $c1(Monkey Guards) $c2($3,$iexp($2,520)) $c1(|) $c1(Yaks) $c2($3,$iexp($2,200)) }
n1405=  elseif ($1 == Attack) { return $c1(Ogres) $c2($3,$iexp($2,240)) $c1(|) $c1(Dust Devils) $c2($3,$iexp($2,420)) $c1(|) $c1(Green Dragons) $c2($3,$iexp($2,300)) $c1(|) $c1(Blue Dragons) $c2($3,$iexp($2,440)) $c1(|) $c1(Fire Giants) $c2($3,$iexp($2,446)) $c1(|) $c1(Abyssal Demons) $c2($3,$iexp($2,600)) $c1(|) $c1(Waterfiends) $c2($3,$iexp($2,512)) $c1(|) $c1(Armoured zombies) $c2($3,$iexp($2,340))  $c1(|) $c1(Moss Giants) $c2($3,$iexp($2,240)) $c1(|) $c1(Bandits) $c2($3,$iexp($2,200)) $c1(|) $c1(Monkey Guards) $c2($3,$iexp($2,520)) $c1(|) $c1(Yaks) $c2($3,$iexp($2,200)) } 
n1406=  elseif ($1 == Strength) { return $c1(Ogres) $c2($3,$iexp($2,240)) $c1(|) $c1(Dust Devils) $c2($3,$iexp($2,420)) $c1(|) $c1(Green Dragons) $c2($3,$iexp($2,300)) $c1(|) $c1(Blue Dragons) $c2($3,$iexp($2,440)) $c1(|) $c1(Fire Giants) $c2($3,$iexp($2,446)) $c1(|) $c1(Abyssal Demons) $c2($3,$iexp($2,600)) $c1(|) $c1(Waterfiends) $c2($3,$iexp($2,512)) $c1(|) $c1(Armoured zombies) $c2($3,$iexp($2,340))  $c1(|) $c1(Moss Giants) $c2($3,$iexp($2,240)) $c1(|) $c1(Bandits) $c2($3,$iexp($2,200)) $c1(|) $c1(Monkey Guards) $c2($3,$iexp($2,520)) $c1(|) $c1(Yaks) $c2($3,$iexp($2,200)) } 
n1407=  elseif ($1 == Defence) { return $c1(Ogres) $c2($3,$iexp($2,240)) $c1(|) $c1(Dust Devils) $c2($3,$iexp($2,420)) $c1(|) $c1(Green Dragons) $c2($3,$iexp($2,300)) $c1(|) $c1(Blue Dragons) $c2($3,$iexp($2,440)) $c1(|) $c1(Fire Giants) $c2($3,$iexp($2,446)) $c1(|) $c1(Abyssal Demons) $c2($3,$iexp($2,600)) $c1(|) $c1(Waterfiends) $c2($3,$iexp($2,512)) $c1(|) $c1(Armoured zombies) $c2($3,$iexp($2,340))  $c1(|) $c1(Moss Giants) $c2($3,$iexp($2,240)) $c1(|) $c1(Bandits) $c2($3,$iexp($2,200)) $c1(|) $c1(Monkey Guards) $c2($3,$iexp($2,520)) $c1(|) $c1(Yaks) $c2($3,$iexp($2,200)) } 
n1408=  elseif ($1 == Hitpoints) || ($1 == Constitution) { return $c1(Ogres) $c2($3,$iexp($2,80)) $c1(|) $c1(Dust Devils) $c2($3,$iexp($2,140)) $c1(|) $c1(Green Dragons) $c2($3,$iexp($2,100)) $c1(|) $c1(Blue Dragons) $c2($3,$iexp($2,146.666667)) $c1(|) $c1(Fire Giants) $c2($3,$iexp($2,148.666667)) $c1(|) $c1(Abyssal Demons) $c2($3,$iexp($2,200)) $c1(|) $c1(Waterfiends) $c2($3,$iexp($2,170.666667)) $c1(|) $c1(Armoured zombies) $c2($3,$iexp($2,113.333333))  $c1(|) $c1(Moss Giants) $c2($3,$iexp($2,80)) $c1(|) $c1(Bandits) $c2($3,$iexp($2,66.666667)) $c1(|) $c1(Monkey Guards) $c2($3,$iexp($2,140)) $c1(|) $c1(Yaks) $c2($3,$iexp($2,66.666667)) } 
n1409=  elseif ($1 == Slayer) { return $c1(Dagannoth) $c2($3,$iexp($2,70)) $c1(|) $c1(Greater Demon) $c2($3,$iexp($2,87)) $c1(|) $c1(Aberrant Spectre) $c2($3,$iexp($2,80)) $c1(|) $c1(Dark Beast) $c2($3,$iexp($2,225)) $c1(|) $c1(Gargoyle) $c2($3,$iexp($2,105)) $c1(|) $c1(Nechryael) $c2($3,$iexp($2,105)) $c1(|) $c1(Bloodveld) $c2($3,$iexp($2,120)) $c1(|) $c1(Black Demon) $c2($3,$iexp($2,157)) $c1(|) $c1(Abyssal Demon) $c2($3,$iexp($2,150)) $c1(|) $c1(Iron Dragon) $c2($3,$iexp($2,165)) $c1(|) $c1(Aquanite) $c2($3,$iexp($2,125)) } 
n1410=  elseif ($1 == Farming) { return $c1(Apple Tree) $c2($3,$iexp($2,1272.5)) $c1(|) $c1(Banana Tree) $c2($3,$iexp($2,1841.5)) $c1(|) $c1(Pineapple Tree) $c2($3,$iexp($2,4791.7)) $c1(|) $c1(Papaya Tree) $c2($3,$iexp($2,6390.4)) $c1(|) $c1(Palm Tree) $c2($3,$iexp($2,10510.1)) $c1(|) $c1(Willow Tree) $c2($3,$iexp($2,1481.3)) $c1(|) $c1(Maple Tree) $c2($3,$iexp($2,3448.4)) $c1(|) $c1(Yew Tree) $c2($3,$iexp($2,7160.9)) $c1(|) $c1(Magic Tree) $c2($3,$iexp($2,13914.8)) $c1(|) $c1(Calquat) $c2($3,$iexp($2,12516.5)) }
n1411=  elseif ($1 == Summoning) {   
n1412=    .var %level $undoexp($4), %gold $summ_return(Gold,%level), %crim $summ_return(Crimson,%level), %green $summ_return(Green,%level), %blue $summ_return(Blue,%level)
n1413=    .var %blue_items $iexp($2,$gettok(%blue,4,124)), %crim_items $iexp($2,$gettok(%crim,4,124)), %green_items $iexp($2,$gettok(%green,4,124)), %gold_items $iexp($2,$gettok(%gold,4,124))
n1414=    .var %shards_blue $calc($gettok(%blue,2,124) * $remove(%blue_items,$chr(44))), %shards_crim $calc($gettok(%crim,2,124) * $remove(%crim_items,$chr(44))), %shards_green $calc($gettok(%green,2,124) * $remove(%green_items,$chr(44))), %shards_gold $calc($gettok(%gold,2,124) * $remove(%gold_items,$chr(44)))
n1415=    return $+($c1($chr(40)),$c2($3,%blue_items),$c1(x),$chr(32),12Blue,$c1($chr(41))) $c2($3,$gettok(%blue,1,124)) $+($c1($chr(40) $+ Shards:),$chr(32),$c2($3,$bytes(%shards_blue,db)),$c1($chr(41))) $&
n1416=      $+($c1(| $chr(40)),$c2($3,%crim_items),$c1(x),$chr(32),5Crimson,$c1($chr(41))) $c2($3,$gettok(%crim,1,124)) $+($c1($chr(40) $+ Shards:),$chr(32),$c2($3,$bytes(%shards_crim,db)),$c1($chr(41))) $+($c1(| $chr(40)),$c2($3,%green_items),$c1(x),$chr(32),3Green,$c1($chr(41))) $c2($3,$gettok(%green,1,124)) $+($c1($chr(40) $+ Shards:),$chr(32),$c2($3,$bytes(%shards_green,db)),$c1($chr(41))) $+($c1(| $chr(40)),$c2($3,%gold_items),$c1(x),$chr(32),07Gold,$c1($chr(41))) $c2($3,$gettok(%gold,1,124)) $+($c1($chr(40) $+ Shards:),$chr(32),$c2($3,$bytes(%shards_gold,db)),$c1($chr(41)))
n1417=  }
n1418=}
n1419=list { return $regsubex($1,/( )/g,$iif(\n = \0,\1and,$chr(44))\1) }
n1420=stringtotoken {
n1421=  var %line
n1422=  var %x = 0
n1423=  while (%x <= $len($1)) {
n1424=    var %line = $addtok(%line,$mid($1,%x,1),46)
n1425=    inc %x
n1426=  }
n1427=  return %line
n1428=}
n1429=Time_Convert {
n1430=  var %y = $replace($regsubex($1,/(\d+:\d+:\d+)/g,),-,$chr(32)),%x = $regsubex($1,/(^\d+-\w+-\d+)/g,) 
n1431=  if ($gettok(%y,2,32) isnum) { var %y = $gettok(%y,1,32) $cmon($gettok(%y,2,32)) $gettok(%y,3,32) }
n1432=  tokenize 58 %x | var %w %y $calc($1 - 1)) $+ : $+ $2 $+ : $+ $3 | return $duration($calc($gmt - $ctime(%w)))
n1433=}
n1434=cmon {
n1435=  if ($1 == 01) { return Jan }
n1436=  elseif ($1 == 02) { return Feb }
n1437=  elseif ($1 == 03) { return March }
n1438=  elseif ($1 == 04) { return April }
n1439=  elseif ($1 == 05) { return May }
n1440=  elseif ($1 == 06) { return June }
n1441=  elseif ($1 == 07) { return July }
n1442=  elseif ($1 == 08) { return Aug }
n1443=  elseif ($1 == 09) { return Sept }
n1444=  elseif ($1 == 10) { return Oct }
n1445=  elseif ($1 == 11) { return Nov }
n1446=  elseif ($1 == 12) { return Dec }
n1447=}
n1448=channels {
n1449=  if ($comchan($1,0)) {
n1450=    var %x = 1
n1451=    while (%x <= $comchan($1,0)) {
n1452=      var %y = $+($comchan($1,%x),$chr(32),%y)
n1453=      inc %x
n1454=    }
n1455=    return $replace(%y,$chr(32),$+(14,$chr(44),6))
n1456=  }
n1457=  else { return false }
n1458=}
n1459=is_staff {
n1460=  if ($me !ison #devvectra && $network != Bitlbee) { 
n1461=    join #devvectra 
n1462=    return $false
n1463=  }
n1464=  if ($1 !ison #DevVectra) { return $false }
n1465=  elseif ($1 isop #DevVectra) { return Owner }
n1466=  elseif ($1 ishop #DevVectra) { return Administrator }
n1467=  elseif ($1 isvoice #DevVectra) && (!$regex($1,/^(\[Dev\])?Vectra(\[\w+\])?/Si)) { return Helper }
n1468=  elseif ($1 isreg #DevVectra) && (!$regex($1,/^(\[Dev\])?Vectra(\[\w+\])?/Si)) { return Staff }
n1469=  else { return $false }
n1470=}
n1471=last.cmd {
n1472=  if (!$regex($1,/^Vectra(\[([0-9]+)\])?$/Si)) {
n1473=    if ($isid) { return $iif($hget($+($me,.,$cid),last.cmd),$v1,None) }
n1474=    elseif ($2) { 
n1475=      if ($numtok($hget($+($me,.,$cid),last.cmd),126) < 5) { .hadd -m $+($me,.,$cid) last.cmd $addtok($hget($+($me,.,$cid),last.cmd),$2-,126) }
n1476=      else { .hadd -m $+($me,.,$cid) last.cmd $+($deltok($hget($+($me,.,$cid),last.cmd),1,126),~,$2-) }
n1477=    }
n1478=  }
n1479=}
n1480=stats_sockmake {
n1481=  return $+($iif($1,$v1,-),:,$iif($2,$v1,-),:,$iif($3,$v1,-),:,$iif($4,$v1,-),:,$iif($5,$v1,-),:,$iif($6,$v1,-),:,$iif($7,$v1,-),:,$iif($8,$v1,-))
n1482=}
n1483=activity {
n1484=  if ($regex($1,/^b(ounty)?_?(h(unter)?)?$/Si)) { return Bounty_Hunter }
n1485=  if ($regex($1,/^b(arb(arian)?)?_?a(ssault)?$)) { return Barbarian_Assault }
n1486=  if ($regex($1,/^b(last)?_?(f(urnace)?)?$/Si)) { return Blast_Furnace }
n1487=  if ($regex($1,/^g(ame(s)?)?_?(r(oom)?)?$/Si)) { return Games_Room }
n1488=  if ($regex($1,/^c(astle)?_?w(ars)?$/Si)) { return Castle_Wars }
n1489=  if ($regex($1,/^clan_?(w(ars)?)?$/Si)) { return Clan_Wars }
n1490=  if ($regex($1,/^d(uel(ing)?)?$)) { return Duel }
n1491=  if ($regex($1,/^p(arty)?_?(r(oom)?)?$)) { return Party_Room }
n1492=  if ($regex($1,/^(f(ishing)?)?_?t(rawler)?$)) { return Fishing_Trawler }
n1493=  if ($regex($1,/^f(ist)?_?o(f)?_?g(uthix)?$/Si)) { return Fist_of_Guthix }
n1494=  if ($regex($1,/^g(reat)?_?o(rb)?_?p(roject)?$)) { return Great_Orb_Project }
n1495=  if ($regex($1,/^(g(roup)?)?_?quest(ing)?$)) { return Group_Questing }
n1496=  if ($regex($1,/^(h(ouse)?)?_?part(y|ies)$)) { return House_Parties }
n1497=  if ($regex($1,/^m(obili[zs]ing)?_?a(rm(ies|y))?$/Si$)) { return Mobilising_Armies }
n1498=  if ($regex($1,/^p(est)?_?c(ontrol)?$/Si)) { return Pest_Control }
n1499=  if ($regex($1,/^r(at)?_?pit(s)?$/Si)) { return Rat_Pits }
n1500=  if ($regex($1,/^role-?(play(ing)?)?_?(server)?$)) { return Role-Playing_Server }
n1501=  if ($regex($1,/^(R(une)?c(rafting)?)?(_-_)?_?(ZMI)?$/Si)) { return Runecrafting_-_ZMI }
n1502=  if ($regex($1,/^(running)?_?air(s)?_?(rune(s)?)?$/Si)) { return Running_-_Air_Runes }
n1503=  if ($regex($1,/^(running)?_?nat(ure)?(s)?_?(rune(s)?)?$/Si)) { return Running_-_Nature_Runes }
n1504=  if ($regex($1,/^(running)?_?law(s)?_?(rune(s)?)?$/Si)) { return Running_-_Law_Runes }
n1505=  if ($regex($1,/^Shade(s)?_?(of)?_?(Mort(')?ton)?/Si$)) { return Shades_of_Mort'ton }
n1506=  if ($regex($1,/^s(oul)?_?w(ar(s)?)?$/Si)) { return Soul_Wars }
n1507=  if ($regex($1,/^s(teal(ing)?)?_?c(reation)?$/Si)) { return Stealing_Creation }
n1508=  if ($regex($1,/^Trade_?(f2p|p2p)?$/Si)) { return Trade }
n1509=  if ($regex($1,/^trouble_?brew(ing)?$/Si)) { return Trouble_Brewing }
n1510=  if ($regex($1,/^(tzhaar)?_?(fight)?_?pit(s)?/Si)) { return Tzhaar_Fight_Pits }
n1511=  if ($regex($1,/^v(ine)?s(weep(er)?)?$/Si)) { return Vinesweeper }
n1512=  if ($regex($1,/^q(uick)?_?c(hat)?/Si$)) { return Quick_Chat }
n1513=  if ($regex($1,/^p(layer)?_?v(s)?_?p(layer)?$/Si)) { return PvP }
n1514=  if ($regex($1,/^l(oot)?_?s(hare)?$/Si)) { return Lootshare }
n1515=}
n1516=shards {
n1517=  .var %shardshave = $1, %shardsreq = $2, %pouchcount = 0
n1518=  while (%shardshave > %shardsreq) {
n1519=    .var %newpouches $floor($calc(%shardshave / %shardsreq))
n1520=    .inc %pouchcount %newpouches
n1521=    .dec %shardshave $calc(%newpouches * (%shardsreq * .30))
n1522=  }
n1523=  .return %pouchcount
n1524=}
n1525=htmlchars { 
n1526=  .return $regsubex($replace($remove($1,amp;),&#9812,?,&quot;,"),/&#(.\d{0,2});/g,$chr(\t)) 
n1527=}
n1528=statsclose {
n1529=  if ($sock($1) != $null) { 
n1530=    sockclose $1
n1531=    halt
n1532=  } 
n1533=}
n1534=gp {
n1535=  if ($1 == $null) {  return Oops }
n1536=  elseif (m isin $1) { return $replace($1,-,$+(,$chr(03),04,-),+,$+($chr(03),03,+)) $+  }
n1537=  elseif (k isin $1) { return $replace($1,-,$+($chr(03),04,-),+,$+($chr(03),03,+)) $+  }
n1538=  elseif (b isin $1) { return $replace($1,-,$+($chr(03),04,-),+,$+($chr(03),03,+)) $+  }
n1539=  elseif (t isin $1) { return $replace($1,-,$+($chr(03),04,-),+,$+($chr(03),03,+)) $+  }
n1540=  else {
n1541=    return $replace($1,-,$+($chr(03),04,-),+,$+($chr(03),03,+)) $+ gp
n1542=  } 
n1543=}
n1544=whatcmds {
n1545=  if ($prop && $istok(runescape,$prop,32)) {
n1546=    .return Alog HerbInfo Potion FarmInfo Trank ZybezL alch-loss soul gecompare order rsc pouch geupdate pvp stats cmb task skill skillplan skillcost skillavg tracker tracktop pcall ge coinshare item start stop checkstartstop top10 highlow compare cmbP skillP rsnews activity rsmusic lootshare noburn spec charm sww pcw grats closest furthest locator clue claninfo alch monster rsf nextcmb privacy spell exp level rsname rsworld kbase rsrule cmb-est farmer players clan potion fairy rsn quest qfc gecheck pcp istat shards portals clancompare clanrank wave merch p2f rank drop
n1547=  }
n1548=  elseif ($prop && $istok(fun,$prop,32)) {
n1549=    .return cookie mm ss fu gay noob rape 8ball guesson guessoff guess lovemeter coffee lame slap chuck vin yomama
n1550=  }
n1551=  elseif ($prop && $istok(misc,$prop,32)) {
n1552=    .return calc country wpcompare temper lyrics ascii wp youtube gamercard tb count autovoice site slogan google 1881 urban cyborg spellcheck halo fact gfight fmylife convert routeplanner postcode weather wow event
n1553=  }
n1554=  else .return $null
n1555=}
n1556=cmdgrp {
n1557=  if ($istok($whatcmds().runescape,$1,32)) { return Runescape }
n1558=  if ($istok($whatcmds().fun,$1,32)) { return Fun }
n1559=  if ($istok($whatcmds().misc,$1,32)) { return Miscellaneous }
n1560=  else return $false
n1561=}
n1562=setgrp {
n1563=  if ($regex($1,/^r(une)?s(cape)?$/Si)) { return Runescape }
n1564=  if ($regex($1,/^fun$/Si)) { return Fun }
n1565=  if ($regex($1,/^(Misc(ellaneous)?|util(ity)?)$/Si)) { return Miscellaneous }
n1566=}
n1567=Settings {
n1568=  if ($isid) {
n1569=    if (!$prop && $istok(Commands Event Site DefaultML Runescape Fun Miscellaneous,$2,32)) { 
n1570=      if ($2 == Commands) { return $readini($qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)),n,$1,Commands),32) }
n1571=      elseif ($setgrp($2)) { return $iif($istok($readini($qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)),n,$1,Commands),$setgrp($2),32),$true,$false) }
n1572=      elseif (!$readini($qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)),n,$1,$2) || $readini($qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)),n,$1,$2) ==  $null) { return 0 }
n1573=      else { return $iif($readini($qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)),n,$1,$2) == 0,$false,$v1) }
n1574=    }
n1575=    elseif (!$istok(VoiceLock Public AutoClan AutoCmb AutoStats AutoVoice GE_Global RSC_Global,$prop,32) || !$1) { return $false }
n1576=    elseif ($prop) {
n1577=      if ($readini($qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)),$1,$prop) == $false) { .return $false }
n1578=      elseif ($readini($qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)),$1,$prop) == $null) { .return $false }
n1579=      else { return $iif($readini($qt($+($mircdirChanFiles\,$network,.,$tag().me,.ini)),n,$1,$prop) == 0,$false,$true) }
n1580=    }
n1581=  }
n1582=}
n1583=Hashshow {
n1584=  var %chan $iif($1,$v1,$chan), %b $hget(%chan,0).item, %c 1
n1585=  while (%b >= %c) {    
n1586=    .echo -s $hget(%chan,%c).item -> $hget(%chan, $hget(%chan,%c).item)
n1587=    inc %c
n1588=  }
n1589=}
n1590=excepted_chans {
n1591=  if ($istok(#Vectra #DevVectra #bots #bot #stats #vectraIRC,$1,32)) { return $true }
n1592=  else { return $false }
n1593=}
n1594=gecompare {
n1595=  if ($1 < 10000) { return $bytes($1,db) $+ gp }
n1596=  if ($1 < 1000000) { return $round($replace($bytes($1,db),$chr(44),$chr(46))) $+ k }
n1597=  if ($1 < 1000000000) { return $round($replace($bytes($1,db),$chr(44),$chr(46))) $+ m }
n1598=  if ($1 > 1000000000) { return $round($replace($bytes($1,db),$chr(44),$chr(46))) $+ b }
n1599=}
n1600=NoActivityTimer {
n1601=  if ($isid && !$prop) { .return $readini(Settings.ini,n,NoTimer,chans) }
n1602=  elseif ($isid && $prop == show) { .msg #DevVectra $+($c3(**),$chr(32),$c3($chr(40)),$c4(EXCEPTION),$c3($chr(41) $+ :)) $c3(Current list is:) $c4($iif($readini(Settings.ini,n,NoTimer,chans),$v1,None)) }
n1603=  elseif ($1 == add) && ($left($2,1) == $chr(35)) {
n1604=    if (!$istok($readini(Settings.ini,n,NoTimer,chans),$2,32)) { 
n1605=      .writeini -n Settings.ini NoTimer chans $addtok($readini(Settings.ini,n,NoTimer,chans),$2,32)
n1606=      if ($Mainbot(#DevVectra) == $me) { .msg #DevVectra $+($c3(**),$chr(32),$c3($chr(40)),$c4(EXCEPTION),$c3($chr(41) $+ :)) $c3(Added) $c4($2) $c3(to the channel timer exceptions list. Current list is:) $c4($readini(Settings.ini,n,NoTimer,chans)) }
n1607=    }
n1608=    else { .msg #DevVectra $+($c3(**),$chr(32),$c3($chr(40)),$c4(EXCEPTION),$c3($chr(41) $+ :)) $c4($2) $c3(already has an exception.) }    
n1609=  }
n1610=  elseif ($1 == del) && ($left($2,1) == $chr(35)) {
n1611=    if ($istok($readini(Settings.ini,n,NoTimer,chans),$2,32)) { 
n1612=      .writeini -n Settings.ini NoTimer chans $remtok($readini(Settings.ini,n,NoTimer,chans),$2,1,32)
n1613=      if ($Mainbot(#DevVectra) == $me) { .msg #DevVectra $+($c3(**),$chr(32),$c3($chr(40)),$c4(EXCEPTION),$c3($chr(41) $+ :)) $c3(Deleted) $c4($2) $c3(from the channel timer exceptions list. Current list is:) $c4($iif($readini(Settings.ini,n,NoTimer,chans),$v1,None)) }
n1614=    }
n1615=    else { .msg #DevVectra $+($c3(**),$chr(32),$c3($chr(40)),$c4(EXCEPTION),$c3($chr(41) $+ :)) $c4($2) $c3(does not have an exception.) }
n1616=  }
n1617=}
n1618=clearchans {
n1619=  if (!$readini(req.ini,req,$1)) {
n1620=    .writeini req.ini req $1 2
n1621=    .msg #devvectra $logo(vec,requirements) $c1(The channel requirements for) $c4($1) $c1(were not found, it's been set to 2.)
n1622=    .msg #devvectra do writeini req.ini req $network 2
n1623=  } 
n1624=  .var %c $ticks, %t 1, %ct 0
n1625=  while (%t <= $hget(0).item) {
n1626=    if ($ticks > $calc(%c + 2000)) { break }
n1627=    if ($hget($hget(%t),0).item == 0) { .hfree $hget(%t) | .inc %ct }
n1628=    .inc %t
n1629=  } 
n1630=  var %c = 1, %req = $readini(req.ini,req,$1), %t $ticks
n1631=  while ($comchan($me,%c)) { 
n1632=    if ($ticks > $calc(%t + 2000)) { break }
n1633=    if ($hget($comchan($me,%c)) && !$istok($NoActivityTimer,$comchan($me,%c),32)) {
n1634=      if (!$excepted_chans($comchan($me,%c)) && $hget($comchan($me,%c),LastCommand) && $ctime > $calc($hget($comchan($me,%c),LastCommand) + 43200)) {  
n1635=        .part $comchan($me,%c) I am parting this channel because it is suspected to be inactive (No commands in 12h). If this is not true, please reinvite Vectra.
n1636=        .msg #DevVectra $+($c3(** $chr(40)),$c4(ACTIVITY),$c3($chr(41) $+ :)) $c3(Parted) $c4($comchan($me,%c)) $c3(because it has been inactive for over) $c4(12) $c3(hours.)
n1637=      }
n1638=    }    
n1639=    if ($nick($comchan($me,%c),0) < %req && !$istok($NoActivityTimer,$comchan($me,%c),32)) { var %chans $+($chr(44),$comchan($me,%c),%chans) }    
n1640=    inc %c 
n1641=  } 
n1642=  if ($mid(%chans,2)) { 
n1643=    .part $mid(%chans,2) I have automatically parted this channel because this channel is suspectly empty (Less than %req users). Please reinvite the bot if this is not true.
n1644=    .msg #devvectra I have parted $numtok(%chans,44) channel - User req: %req
n1645=  }
n1646=}
n1647=vectra_staff {
n1648=  if ($1 !ison #devvectra) { .return $false }
n1649=  else {
n1650=    if ($nick isvoice #devvectra) || ($nick ishop #devvectra) || ($nick isop #devvectra) && ($prop == helper) { .return $true }
n1651=    elseif ($nick ishop #devvectra) || ($nick isop #devvectra) && ($prop == admin) { .return $true }
n1652=    elseif ($nick isop #devvectra) && ($prop == owner) { .return $true }
n1653=    else { .return $false }
n1654=  }
n1655=}
n1656=lang {
n1657=  if ($regex($1,/^en(?:glish)?$/i)) return english
n1658=  if ($regex($1,/^(?:de|german)$/i)) return german
n1659=  if ($regex($1,/^(?:bg|bulgarian)$/i)) return bulgarian
n1660=  if ($regex($1,/^ar(?:abic)?$/i)) return arabic
n1661=  if ($regex($1,/^ca(?:talan)?$/i)) return catalan
n1662=  if ($regex($1,/^(?:zh-CN|chinese_simp)$/i)) return chinese_simp
n1663=  if ($regex($1,/^(?:croatian|hr)$/i)) return croatian
n1664=  if ($regex($1,/^(?:czech|cs)$/i)) return czech
n1665=  if ($regex($1,/^da(?:nish)?$/i)) return danish
n1666=  if ($regex($1,/^(?:dutch|nl)$/i)) return dutch
n1667=  if ($regex($1,/^(?:tl|filipino)$/i)) return filipino
n1668=  if ($regex($1,/^fi(?:nnish)?$/i)) return finnish
n1669=  if ($regex($1,/^fr(?:ench)?$/i)) return french
n1670=  if ($regex($1,/^(?:greek|el)$/i)) return greek
n1671=  if ($regex($1,/^(?:hebrew|iw)$/i)) return hebrew
n1672=  if ($regex($1,/^hi(?:ndi)?$/i)) return hindi
n1673=  if ($regex($1,/^(?:indonesian|id)$/i)) return indonesian
n1674=  if ($regex($1,/^it(?:alian)?$/i)) return italian
n1675=  if ($regex($1,/^ja(?:panese)?$/i)) return japenese
n1676=  if ($regex($1,/^ko(?:rean)?$/i)) return korean
n1677=  if ($regex($1,/^(?:latvian|lv)$/i)) return latvian
n1678=  if ($regex($1,/^(?:lithuanian|lt)$/i)) return lithuanian
n1679=  if ($regex($1,/^no(?:rwegian)?$/i)) return norwegian
n1680=  if ($regex($1,/^(?:polish|pl)$/i)) return polish
n1681=  if ($regex($1,/^(?:portuguese|pt)$/i)) return portuguese
n1682=  if ($regex($1,/^ro(?:manian)?$/i)) return romanian
n1683=  if ($regex($1,/^ru(?:ssian)?$/i)) return russian
n1684=  if ($regex($1,/^(?:serbian|sr)$/i)) return serbian
n1685=  if ($regex($1,/^(?:slovak|sk)$/i)) return slovak
n1686=  if ($regex($1,/^(?:spanish|es)$/i)) return spanish
n1687=  if ($regex($1,/^sl(?:ovenian)?$/i)) return slovenian
n1688=  if ($regex($1,/^(?:swedish|sv)$/i)) return swedish
n1689=  if ($regex($1,/^uk(?:rainian)?$/i)) return ukrainian
n1690=  if ($regex($1,/^vi(?:etnamese)?$/i)) return vietnamese
n1691=  if ($regex($1,/^af(?:rikaans)?$/i)) return afrikaans
n1692=  if ($regex($1,/^(?:sq|albanian)$/i)) return albanian
n1693=  if ($regex($1,/^be(?:larusian)?$/i)) return belarusian
n1694=  if ($regex($1,/^(?:zh-TW|Chinese_Trad)$/i)) return Chinese_Trad
n1695=  if ($regex($1,/^(?:et|estonian)$/i)) return estonian
n1696=  if ($regex($1,/^(?:gl|galician)$/i)) return galician
n1697=  if ($regex($1,/^hu(?:ngarian)?$/i)) return hungarian
n1698=  if ($regex($1,/^(?:is|icelandic)$/i)) return iceladic
n1699=  if ($regex($1,/^(?:ga|irish)$/i)) return irish
n1700=  if ($regex($1,/^(?:mk|macedonian)$/i)) return macedonian
n1701=  if ($regex($1,/^(?:ms|malay)$/i)) return malay
n1702=  if ($regex($1,/^(?:mt|maltese)$/i)) return maltese
n1703=  if ($regex($1,/^(?:fa|persian)$/i)) return persian
n1704=  if ($regex($1,/^sw(?:ahili)?$/i)) return swahili
n1705=  if ($regex($1,/^th(?:ai)?$/i)) return thai
n1706=  if ($regex($1,/^(?:tr|turkish)$/i)) return turkish
n1707=  if ($regex($1,/^(?:cy|welsh)$/i)) return welsh
n1708=  if ($regex($1,/^yi(?:ddish)?$/i)) return yiddish
n1709=  if ($regex($1,/^am(?:heric)?$/i)) return amheric
n1710=  if ($regex($1,/^(?:hy|armenian)$/i)) return armenian
n1711=  if ($regex($1,/^az(?:erbaijani)?$/i)) return azerbaijani
n1712=  if ($regex($1,/^(?:eu|basque)$/i)) return basque
n1713=  if ($regex($1,/^(?:bn|bengali)$/i)) return bengali
n1714=  if ($regex($1,/^(?:bh|bihari)$/i)) return bihari
n1715=  if ($regex($1,/^(?:my|burmese)$/i)) return burmese
n1716=  if ($regex($1,/^(?:chr|cherokee)$/i)) return cherokee
n1717=  if ($regex($1,/^(?:zn|chinese)$/i)) return chinese
n1718=  if ($regex($1,/^(?:dv|dhivehi)$/i)) return dhivehi
n1719=  if ($regex($1,/^(?:eo|esparanto)$/i)) return esperanto
n1720=  if ($regex($1,/^(?:ka|georgian)$/i)) return georgian
n1721=  if ($regex($1,/^(?:gn|guarani)$/i)) return guarani
n1722=  if ($regex($1,/^gu(?:jarati)?$/i)) return gujarati
n1723=  if ($regex($1,/^(?:iu|inuktitut)$/i)) return inuktitut
n1724=  if ($regex($1,/^(?:kn|kannada)$/i)) return kannada
n1725=  if ($regex($1,/^(?:kk|kazakh)$/i)) return kazakh
n1726=  if ($regex($1,/^(?:km|khmer)$/i)) return khmer
n1727=  if ($regex($1,/^ku(?:rdish)?$/i)) return kurdish 
n1728=  if ($regex($1,/^ky(?:rgyz)?$/i)) return kyrgyz
n1729=  if ($regex($1,/^lo(?:athian)?$/i)) return loathian
n1730=  if ($regex($1,/^(?:ml|malayalam)$/i)) return malayalam
n1731=  if ($regex($1,/^(?:mr|marathi)$/i)) return marathi
n1732=  if ($regex($1,/^(?:mn|mongolian)$/i)) return mongolian
n1733=  if ($regex($1,/^ne(?:pali)?$/i)) return nepali
n1734=  if ($regex($1,/^or(?:iya)?$/i)) return oriya
n1735=  if ($regex($1,/^(?:ps|pashto)$/i)) return pashto
n1736=  if ($regex($1,/^(?:pa|punjabi)$/i)) return punjabi
n1737=  if ($regex($1,/^sa(?:nskrit)?$/i)) return sanskrit
n1738=  if ($regex($1,/^(?:sd|sindhi)$/i)) return sindhi
n1739=  if ($regex($1,/^si(?:nhalese)?$/i)) return sinhalese
n1740=  if ($regex($1,/^(?:tg|tajik)$/i)) return tajik
n1741=  if ($regex($1,/^ta(?:mil)?$/i)) return tamil
n1742=  if ($regex($1,/^(?:tegalog|tl)$/i)) return tegalog
n1743=  if ($regex($1,/^te(?:lugu)?$/i)) return telugu
n1744=  if ($regex($1,/^(?:bo|tibetan)$/i)) return tibetan
n1745=  if ($regex($1,/^ur(?:du)?$/i)) return urdu
n1746=  if ($regex($1,/^uz(?:bek)?$/i)) return uzbek
n1747=  if ($regex($1,/^(?:uighur|ug)$/i)) return uighur
n1748=} 
n1749=emsg {
n1750=  .var %max = $iif($readini(Settings.ini,Connect,MAXTARGETS),$v1,10), %x = 0, %total = $comchan($me,0)
n1751=  while (%x < %total) {
n1752=    .inc %x 1
n1753=    if ($me != Vectra && Vectra ison $comchan($me,%x)) { continue }
n1754=    elseif ($me != Vectra && $excepted_chans($comchan($me,%x))) { continue }
n1755=    elseif ($1 == e) { 
n1756=      if (*B* iswmcs $chan(%x).mode) { .raw PRIVMSG $comchan($me,%x) : $+ $iif(c isincs $chan($comchan($me,%x)).mode,$strip($2-),$2-) }
n1757=      else { .var %chanlist = $addtok(%chanlist,$comchan($me,%x),44) } 
n1758=    }
n1759=    elseif ($1 == ge && !$Settings($comchan($me,%x)).GE_Global) { 
n1760=      if (*B* iswmcs $chan(%x).mode) { .raw PRIVMSG $comchan($me,%x) : $+ $iif(c isincs $chan($comchan($me,%x)).mode,$strip($2-),$2-) }
n1761=      else { .var %chanlist = $addtok(%chanlist,$comchan($me,%x),44) }
n1762=    }
n1763=    elseif ($1 == rsc && !$Settings($comchan($me,%x)).RSC_Global) {
n1764=      if (*B* iswmcs $chan(%x).mode) { .raw PRIVMSG $comchan($me,%x) : $+ $iif(c isincs $chan($comchan($me,%x)).mode,$strip($2-),$2-) } 
n1765=      else { .var %chanlist = $addtok(%chanlist,$comchan($me,%x),44) }
n1766=    }
n1767=    elseif (*B* iswmcs $chan(%x).mode) { .raw PRIVMSG $comchan($me,%x) : $+ $iif(c isincs $chan($comchan($me,%x)).mode,$strip($2-),$2-) }
n1768=    else { .var %chanlist = $addtok(%chanlist,$comchan($me,%x),44) }      
n1769=    if ($numtok(%chanlist,44) == %max) {
n1770=      .var %n = $v1 ,%a = $regsubex($str(.,%n),/./g,$iif(c isincs $chan($gettok(%chanlist,\n,44)).mode,$gettok(%chanlist,\n,44) $+ $chr(44)))
n1771=      .var %b = $regsubex($str(.,%n),/./g,$iif(c !isincs $chan($gettok(%chanlist,\n,44)).mode,$gettok(%chanlist,\n,44) $+ $chr(44)))
n1772=      if (%a != $null) .raw PRIVMSG $left(%a,-1) : $+ $strip($2-)
n1773=      if (%b != $null) .raw PRIVMSG $left(%b,-1) : $+ $2-
n1774=      .var %chanlist
n1775=    }
n1776=  }
n1777=  .var %n = $numtok(%chanlist,44),%a = $regsubex($str(.,%n),/./g,$iif(c isincs $chan($gettok(%chanlist,\n,44)).mode,$gettok(%chanlist,\n,44) $+ $chr(44)))
n1778=  .var %b = $regsubex($str(.,%n),/./g,$iif(c !isincs $chan($gettok(%chanlist,\n,44)).mode,$gettok(%chanlist,\n,44) $+ $chr(44)))
n1779=  if (%a != $null) .raw PRIVMSG $left(%a,-1) : $+ $strip($2-)
n1780=  if (%b != $null) .raw PRIVMSG $left(%b,-1) : $+ $2-
n1781=  if ($1 == ge) .writeini geupdate.ini update ctime $ctime
n1782=}
n1783=blacklist {
n1784=  if ($prop == $null) {
n1785=    if ($ctime > $readini(blacklist.ini,$1,ctime) && $readini(blacklist.ini,$1,ctime) != 0) {
n1786=      !.remini -n blacklist.ini $1
n1787=      !.return $false
n1788=    }
n1789=    elseif (!$readini(blacklist.ini,$1,staff)) {
n1790=      return $false
n1791=    }
n1792=    else { 
n1793=      !.return $true
n1794=    }
n1795=  }
n1796=  elseif ($prop == reason) { !.return $readini(blacklist.ini,$1,reason) }
n1797=  elseif ($prop == by) { !.return $readini(blacklist.ini,$1,staff) }
n1798=  elseif ($prop == when) { !.return $readini(blacklist.ini,$1,when) }
n1799=  elseif ($prop == expire) { !.return $iif($readini(blacklist.ini,$1,ctime) == 0,Never.,$duration($calc($v1 - $ctime),1)) }
n1800=}
n1801=dev {
n1802=  if ($me ison #devvectra) {
n1803=    .msg #devvectra $1
n1804=  }
n1805=  else { 
n1806=    join #devvectra
n1807=    .msg #devvectra $1
n1808=  }
n1809=}
n1810=bot_on {
n1811=  var %x = $remove($1,+,%,&,@,~), %c = 0
n1812=  while ($numtok(%x,32) > %c) {
n1813=    if ($is_bot($gettok(%x,%c,32)) == $true) && ($gettok(%x,%c,32) != $me) {
n1814=      return $gettok(%x,%c,32)
n1815=    }
n1816=    inc %c
n1817=  }
n1818=  return $false 
n1819=  halt
n1820=}
